{
    "openapi": "3.0.0",
    "info": {
        "title": "Unofficial Bungie.net API for Destiny 1",
        "description": "These are legacy endpoints for Destiny 1 that are no longer supported officially by Bungie.",
        "termsOfService": "https://www.bungie.net/en/View/Bungie/terms",
        "contact": {
            "name": "lowlines",
            "url": "https://github.com/DestinyDevs/BungieNetPlatform",
            "email": "lowlines89@gmail.com"
        },
        "license": {
            "name": "BSD License 2.0",
            "url": "https://github.com/DestinyDevs/BungieNetPlatform/blob/master/wiki-builder-v2/LICENSE"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "https://bungie.net/d1/Platform",
            "description": "The final resting place for the first 3 years of Destiny."
        }
    ],
    "paths": {
        "/Destiny/Advisors/V2/": {
            "summary": "Destiny.GetPublicAdvisorsV2",
            "description": "",
            "get": {
                "tags": [
                    "Destiny",
                    "Unofficial"
                ],
                "description": "",
                "operationId": "Destiny.GetPublicAdvisorsV2",
                "parameters": [
                    {
                        "name": "definitions",
                        "in": "query",
                        "description": "Include definitions in the response. Use while testing.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Destiny.GetPublicAdvisorsV2"
                    }
                }
            }
        },
        "/Destiny/{membershipType}/Account/{destinyMembershipId}/Advisors/": {
            "summary": "Destiny.GetAdvisorsForAccount",
            "description": "",
            "get": {
                "tags": [
                    "Destiny",
                    "Unofficial"
                ],
                "description": "",
                "operationId": "Destiny.GetAdvisorsForAccount",
                "parameters": [
                    {
                        "name": "membershipType",
                        "in": "path",
                        "description": "The type of account for which info will be extracted.",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/BungieMembershipType"
                        }
                    },
                    {
                        "name": "destinyMembershipId",
                        "in": "path",
                        "description": "Destiny membership ID.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "definitions",
                        "in": "query",
                        "description": "Include definitions in the response. Use while testing.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Destiny.GetAdvisorsForAccount"
                    }
                }
            }
        },
        "/Destiny/{membershipType}/Account/{destinyMembershipId}/Character/{characterId}/Advisors/V2/": {
            "summary": "Destiny.GetAdvisorsForCharacterV2",
            "description": "",
            "get": {
                "tags": [
                    "Destiny",
                    "Unofficial"
                ],
                "description": "",
                "operationId": "Destiny.GetAdvisorsForCharacterV2",
                "parameters": [
                    {
                        "name": "membershipType",
                        "in": "path",
                        "description": "The type of account for which info will be extracted.",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/BungieMembershipType"
                        }
                    },
                    {
                        "name": "destinyMembershipId",
                        "in": "path",
                        "description": "Destiny membership ID.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "characterId",
                        "in": "path",
                        "description": "",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "definitions",
                        "in": "query",
                        "description": "Include definitions in the response. Use while testing.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Destiny.GetAdvisorsForCharacterV2"
                    }
                }
            }
        },
        "/Destiny/Manifest/": {
            "summary": "Destiny.GetDestinyManifest",
            "description": "Returns the current version of the Destiny 1 mobile manifest as a json object.",
            "get": {
                "tags": [
                    "Destiny",
                    "Unofficial"
                ],
                "description": "Returns the current version of the Destiny 1 mobile manifest as a json object.",
                "operationId": "Destiny.GetDestinyManifest",
                "parameters": [],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Destiny.Config.DestinyManifest"
                    }
                }
            }
        },
        "/Destiny/Manifest/{definitionType}/{definitionId}/": {
            "summary": "Destiny.GetDestinySingleDefinition",
            "description": "Returns a single definition from the manifest as json object.",
            "get": {
                "tags": [
                    "Destiny",
                    "Unofficial"
                ],
                "description": "Returns a single definition from the manifest as json object.",
                "operationId": "Destiny.GetDestinySingleDefinition",
                "parameters": [
                    {
                        "name": "definitionType",
                        "in": "path",
                        "description": "",
                        "schema": {
                            "$ref": "#/components/schemas/Destiny.DefinitionType"
                        },
                        "required": true
                    },
                    {
                        "name": "definitionId",
                        "in": "path",
                        "description": "",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "required": true
                    },
                    {
                        "name": "definitions",
                        "in": "query",
                        "description": "Include definitions in the response. Use while testing.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "version",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Destiny.GetDestinySingleDefinition"
                    }
                }
            }
        },
        "/Destiny/SearchDestinyPlayer/{membershipType}/{displayName}/": {
            "summary": "Destiny.SearchDestinyPlayer",
            "description": "Returns a list of players by username and platform.",
            "get": {
                "tags": [
                    "Destiny",
                    "Unofficial"
                ],
                "description": "Returns a list of players by username and platform.",
                "operationId": "Destiny.SearchDestinyPlayer",
                "parameters": [
                    {
                        "name": "membershipType",
                        "in": "path",
                        "description": "The type of account for which info will be extracted.",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/BungieMembershipType"
                        }
                    },
                    {
                        "name": "displayName",
                        "in": "path",
                        "description": "A valid display name to search for.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Destiny.SearchDestinyPlayer"
                    }
                }
            }
        },
        "/Destiny/{param1}/Account/{param2}/Character/{param3}/ItemReference/{param4}/": {
            "summary": "Destiny.GetItemReferenceDetail",
            "description": "",
            "get": {
                "tags": [
                    "Destiny",
                    "Unofficial"
                ],
                "description": "",
                "operationId": "Destiny.GetItemReferenceDetail",
                "parameters": [
                    {
                        "name": "param1",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "param2",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "param3",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "param4",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "definitions",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Destiny.GetItemReferenceDetail"
                    }
                }
            }
        },
        "/Destiny/{membershipType}/Account/{destinyMembershipId}/Items/": {
            "summary": "Destiny.GetAllItemsSummary",
            "description": "Returns all items for a given account.",
            "get": {
                "tags": [
                    "Destiny",
                    "Unofficial"
                ],
                "description": "Returns all items for a given account.",
                "operationId": "Destiny.GetAllItemsSummary",
                "parameters": [
                    {
                        "name": "membershipType",
                        "in": "path",
                        "description": "The type of account for which info will be extracted.",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/BungieMembershipType"
                        }
                    },
                    {
                        "name": "destinyMembershipId",
                        "in": "path",
                        "description": "Destiny membership ID.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "definitions",
                        "in": "query",
                        "description": "Include definitions in the response. Use while testing.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Destiny.GetAllItemsSummary"
                    }
                }
            }
        },
        "/Destiny/{membershipType}/Account/{destinyMembershipId}/": {
            "summary": "Destiny.GetAccount",
            "description": "Returns Destiny account information for the supplied membership.",
            "get": {
                "tags": [
                    "Destiny",
                    "Unofficial"
                ],
                "description": "Returns Destiny account information for the supplied membership.",
                "operationId": "Destiny.GetAccount",
                "parameters": [
                    {
                        "name": "membershipType",
                        "in": "path",
                        "description": "The type of account for which info will be extracted.",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/BungieMembershipType"
                        }
                    },
                    {
                        "name": "destinyMembershipId",
                        "in": "path",
                        "description": "Destiny membership ID.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "definitions",
                        "in": "query",
                        "description": "Include definitions in the response. Use while testing.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Destiny.GetAccount"
                    }
                }
            }
        },
        "/Destiny/{membershipType}/Account/{destinyMembershipId}/Summary/": {
            "summary": "Destiny.GetAccountSummary",
            "description": "",
            "get": {
                "tags": [
                    "Destiny",
                    "Unofficial"
                ],
                "description": "",
                "operationId": "Destiny.GetAccountSummary",
                "parameters": [
                    {
                        "name": "membershipType",
                        "in": "path",
                        "description": "The type of account for which info will be extracted.",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/BungieMembershipType"
                        }
                    },
                    {
                        "name": "destinyMembershipId",
                        "in": "path",
                        "description": "Destiny membership ID.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "definitions",
                        "in": "query",
                        "description": "Include definitions in the response. Use while testing.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Destiny.GetAccountSummary"
                    }
                }
            }
        },
        "/Destiny/{membershipType}/MyAccount/Vault/": {
            "summary": "Destiny.GetVault",
            "description": "Returns the contents of player's Vault.",
            "get": {
                "tags": [
                    "Destiny",
                    "Unofficial"
                ],
                "description": "Returns the contents of player's Vault.",
                "operationId": "Destiny.GetVault",
                "parameters": [
                    {
                        "name": "membershipType",
                        "in": "path",
                        "description": "The type of account for which info will be extracted.",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/BungieMembershipType"
                        }
                    },
                    {
                        "name": "definitions",
                        "in": "query",
                        "description": "Include definitions in the response. Use while testing.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "accountId",
                        "in": "query",
                        "description": "Destiny membership ID.",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Destiny.GetVault"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "ReadDestinyInventoryAndVault"
                        ]
                    }
                ]
            }
        },
        "/Destiny/{membershipType}/MyAccount/Vault/Summary/": {
            "summary": "Destiny.GetVaultSummary",
            "description": "",
            "get": {
                "tags": [
                    "Destiny",
                    "Unofficial"
                ],
                "description": "",
                "operationId": "Destiny.GetVaultSummary",
                "parameters": [
                    {
                        "name": "membershipType",
                        "in": "path",
                        "description": "The type of account for which info will be extracted.",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/BungieMembershipType"
                        }
                    },
                    {
                        "name": "definitions",
                        "in": "query",
                        "description": "Include definitions in the response. Use while testing.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "accountId",
                        "in": "query",
                        "description": "Destiny membership ID.",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Destiny.GetVaultSummary"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "ReadDestinyInventoryAndVault"
                        ]
                    }
                ]
            }
        },
        "/Destiny/{membershipType}/Account/{destinyMembershipId}/Character/{characterId}/": {
            "summary": "Destiny.GetCharacterSummary",
            "description": "Returns Destiny character information for the given characterId.<br/>To get a more detailed overview, see the private endpoint [[GetDestinyAccountCharacterComplete]].",
            "get": {
                "tags": [
                    "Destiny",
                    "Unofficial"
                ],
                "description": "Returns Destiny character information for the given characterId.<br/>To get a more detailed overview, see the private endpoint [[GetDestinyAccountCharacterComplete]].",
                "operationId": "Destiny.GetCharacterSummary",
                "parameters": [
                    {
                        "name": "membershipType",
                        "in": "path",
                        "description": "The type of account for which info will be extracted.",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/BungieMembershipType"
                        }
                    },
                    {
                        "name": "destinyMembershipId",
                        "in": "path",
                        "description": "Destiny membership ID.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "characterId",
                        "in": "path",
                        "description": "",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "definitions",
                        "in": "query",
                        "description": "Include definitions in the response. Use while testing.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Destiny.GetCharacterSummary"
                    }
                }
            }
        },
        "/Destiny/{membershipType}/Account/{destinyMembershipId}/Character/{characterId}/Complete/": {
            "summary": "Destiny.GetCharacter",
            "description": "Returns Destiny character information with a given characterId. This endpoint is an extended version of [[GetCharacterSummary]].",
            "get": {
                "tags": [
                    "Destiny",
                    "Unofficial"
                ],
                "description": "Returns Destiny character information with a given characterId. This endpoint is an extended version of [[GetCharacterSummary]].",
                "operationId": "Destiny.GetCharacter",
                "parameters": [
                    {
                        "name": "membershipType",
                        "in": "path",
                        "description": "The type of account for which info will be extracted.",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/BungieMembershipType"
                        }
                    },
                    {
                        "name": "destinyMembershipId",
                        "in": "path",
                        "description": "Destiny membership ID.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "characterId",
                        "in": "path",
                        "description": "",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "definitions",
                        "in": "query",
                        "description": "Include definitions in the response. Use while testing.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Destiny.GetCharacter"
                    }
                }
            }
        },
        "/Destiny/{membershipType}/Account/{destinyMembershipId}/Character/{characterId}/Inventory/": {
            "summary": "Destiny.GetCharacterInventory",
            "description": "Returns the inventory of a Destiny character.",
            "get": {
                "tags": [
                    "Destiny",
                    "Unofficial"
                ],
                "description": "Returns the inventory of a Destiny character.",
                "operationId": "Destiny.GetCharacterInventory",
                "parameters": [
                    {
                        "name": "membershipType",
                        "in": "path",
                        "description": "The type of account for which info will be extracted.",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/BungieMembershipType"
                        }
                    },
                    {
                        "name": "destinyMembershipId",
                        "in": "path",
                        "description": "Destiny membership ID.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "characterId",
                        "in": "path",
                        "description": "",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "definitions",
                        "in": "query",
                        "description": "Include definitions in the response. Use while testing.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Destiny.GetCharacterInventory"
                    }
                }
            }
        },
        "/Destiny/{membershipType}/Account/{destinyMembershipId}/Character/{characterId}/Inventory/Summary/": {
            "summary": "Destiny.GetCharacterInventorySummary",
            "description": "",
            "get": {
                "tags": [
                    "Destiny",
                    "Unofficial"
                ],
                "description": "",
                "operationId": "Destiny.GetCharacterInventorySummary",
                "parameters": [
                    {
                        "name": "membershipType",
                        "in": "path",
                        "description": "The type of account for which info will be extracted.",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/BungieMembershipType"
                        }
                    },
                    {
                        "name": "destinyMembershipId",
                        "in": "path",
                        "description": "Destiny membership ID.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "characterId",
                        "in": "path",
                        "description": "",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "definitions",
                        "in": "query",
                        "description": "Include definitions in the response. Use while testing.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Destiny.GetCharacterInventorySummary"
                    }
                }
            }
        },
        "/Destiny/{membershipType}/Account/{destinyMembershipId}/Character/{characterId}/Inventory/{itemInstanceId}/": {
            "summary": "Destiny.GetItemDetail",
            "description": "",
            "get": {
                "tags": [
                    "Destiny",
                    "Unofficial"
                ],
                "description": "",
                "operationId": "Destiny.GetItemDetail",
                "parameters": [
                    {
                        "name": "membershipType",
                        "in": "path",
                        "description": "The type of account for which info will be extracted.",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/BungieMembershipType"
                        }
                    },
                    {
                        "name": "destinyMembershipId",
                        "in": "path",
                        "description": "Destiny membership ID.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "characterId",
                        "in": "path",
                        "description": "",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "itemInstanceId",
                        "in": "path",
                        "description": "",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "definitions",
                        "in": "query",
                        "description": "Include definitions in the response. Use while testing.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Destiny.GetItemDetail"
                    }
                }
            }
        },
        "/Destiny/{membershipType}/Account/{destinyMembershipId}/Character/{characterId}/Activities/": {
            "summary": "Destiny.GetCharacterActivities",
            "description": "Returns activity progress for a given character.",
            "get": {
                "tags": [
                    "Destiny",
                    "Unofficial"
                ],
                "description": "Returns activity progress for a given character.",
                "operationId": "Destiny.GetCharacterActivities",
                "parameters": [
                    {
                        "name": "membershipType",
                        "in": "path",
                        "description": "The type of account for which info will be extracted.",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/BungieMembershipType"
                        }
                    },
                    {
                        "name": "destinyMembershipId",
                        "in": "path",
                        "description": "Destiny membership ID.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "characterId",
                        "in": "path",
                        "description": "",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "definitions",
                        "in": "query",
                        "description": "Include definitions in the response. Use while testing.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Destiny.GetCharacterActivities"
                    }
                }
            }
        },
        "/Destiny/{membershipType}/Account/{destinyMembershipId}/Character/{characterId}/Progression/": {
            "summary": "Destiny.GetCharacterProgression",
            "description": "Returns progression information for a given Destiny character.",
            "get": {
                "tags": [
                    "Destiny",
                    "Unofficial"
                ],
                "description": "Returns progression information for a given Destiny character.",
                "operationId": "Destiny.GetCharacterProgression",
                "parameters": [
                    {
                        "name": "membershipType",
                        "in": "path",
                        "description": "The type of account for which info will be extracted.",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/BungieMembershipType"
                        }
                    },
                    {
                        "name": "destinyMembershipId",
                        "in": "path",
                        "description": "Destiny membership ID.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "characterId",
                        "in": "path",
                        "description": "",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "definitions",
                        "in": "query",
                        "description": "Include definitions in the response. Use while testing.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Destiny.GetCharacterProgression"
                    }
                }
            }
        },
        "/Destiny/{membershipType}/Account/{destinyMembershipId}/Triumphs/": {
            "summary": "Destiny.GetTriumphs",
            "description": "Returns a list of triumph sets for a given account.",
            "get": {
                "tags": [
                    "Destiny",
                    "Unofficial"
                ],
                "description": "Returns a list of triumph sets for a given account.",
                "operationId": "Destiny.GetTriumphs",
                "parameters": [
                    {
                        "name": "membershipType",
                        "in": "path",
                        "description": "The type of account for which info will be extracted.",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/BungieMembershipType"
                        }
                    },
                    {
                        "name": "destinyMembershipId",
                        "in": "path",
                        "description": "Destiny membership ID.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "definitions",
                        "in": "query",
                        "description": "Include definitions in the response. Use while testing.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Destiny.GetTriumphs"
                    }
                }
            }
        },
        "/Destiny/{membershipType}/MyAccount/RecordBooks/{recordBookHash}/Completion/": {
            "summary": "Destiny.GetRecordBookCompletionStatus",
            "description": "",
            "get": {
                "tags": [
                    "Destiny",
                    "Unofficial"
                ],
                "description": "",
                "operationId": "Destiny.GetRecordBookCompletionStatus",
                "parameters": [
                    {
                        "name": "membershipType",
                        "in": "path",
                        "description": "The type of account for which info will be extracted.",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/BungieMembershipType"
                        }
                    },
                    {
                        "name": "recordBookHash",
                        "in": "path",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "required": true
                    },
                    {
                        "name": "definitions",
                        "in": "query",
                        "description": "Include definitions in the response. Use while testing.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Destiny.GetRecordBookCompletionStatus"
                    }
                }
            }
        },
        "/Destiny/{membershipType}/MyAccount/Character/{characterId}/Vendors/": {
            "summary": "Destiny.GetAllVendorsForCurrentCharacter",
            "description": "",
            "get": {
                "tags": [
                    "Destiny",
                    "Unofficial"
                ],
                "description": "",
                "operationId": "Destiny.GetAllVendorsForCurrentCharacter",
                "parameters": [
                    {
                        "name": "membershipType",
                        "in": "path",
                        "description": "The type of account for which info will be extracted.",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/BungieMembershipType"
                        }
                    },
                    {
                        "name": "characterId",
                        "in": "path",
                        "description": "",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "definitions",
                        "in": "query",
                        "description": "Include definitions in the response. Use while testing.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Destiny.GetAllVendorsForCurrentCharacter"
                    }
                }
            }
        },
        "/Destiny/{membershipType}/MyAccount/Character/{characterId}/Vendors/Summaries/": {
            "summary": "Destiny.GetVendorSummariesForCurrentCharacter",
            "description": "Returns a summary of Vendors for a given Destiny character.",
            "get": {
                "tags": [
                    "Destiny",
                    "Unofficial"
                ],
                "description": "Returns a summary of Vendors for a given Destiny character.",
                "operationId": "Destiny.GetVendorSummariesForCurrentCharacter",
                "parameters": [
                    {
                        "name": "membershipType",
                        "in": "path",
                        "description": "The type of account for which info will be extracted.",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/BungieMembershipType"
                        }
                    },
                    {
                        "name": "characterId",
                        "in": "path",
                        "description": "",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "definitions",
                        "in": "query",
                        "description": "Include definitions in the response. Use while testing.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Destiny.GetVendorSummariesForCurrentCharacter"
                    }
                }
            }
        },
        "/Destiny/{membershipType}/MyAccount/Character/{characterId}/Vendor/{vendorHash}/": {
            "summary": "Destiny.GetVendorForCurrentCharacter",
            "description": "Returns information about a Vendor for a given Destiny character.",
            "get": {
                "tags": [
                    "Destiny",
                    "Unofficial"
                ],
                "description": "Returns information about a Vendor for a given Destiny character.",
                "operationId": "Destiny.GetVendorForCurrentCharacter",
                "parameters": [
                    {
                        "name": "membershipType",
                        "in": "path",
                        "description": "The type of account for which info will be extracted.",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/BungieMembershipType"
                        }
                    },
                    {
                        "name": "characterId",
                        "in": "path",
                        "description": "",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "vendorHash",
                        "in": "path",
                        "description": "A valid vendorHash.",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "required": true
                    },
                    {
                        "name": "definitions",
                        "in": "query",
                        "description": "Include definitions in the response. Use while testing.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Destiny.GetVendorForCurrentCharacter"
                    }
                }
            }
        },
        "/Destiny/{membershipType}/MyAccount/Character/{characterId}/Vendor/{vendorHash}/Item/{vendorItemId}/": {
            "summary": "Destiny.GetVendorItemDetailForCurrentCharacter",
            "description": "",
            "get": {
                "tags": [
                    "Destiny",
                    "Unofficial"
                ],
                "description": "",
                "operationId": "Destiny.GetVendorItemDetailForCurrentCharacter",
                "parameters": [
                    {
                        "name": "membershipType",
                        "in": "path",
                        "description": "The type of account for which info will be extracted.",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/BungieMembershipType"
                        }
                    },
                    {
                        "name": "characterId",
                        "in": "path",
                        "description": "",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "vendorHash",
                        "in": "path",
                        "description": "A valid vendorHash.",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "required": true
                    },
                    {
                        "name": "vendorItemId",
                        "in": "path",
                        "description": "A valid vendorItemIndex see [[GetVendorForCurrentCharacter]].",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "required": true
                    },
                    {
                        "name": "definitions",
                        "in": "query",
                        "description": "Include definitions in the response. Use while testing.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Destiny.GetVendorItemDetailForCurrentCharacter"
                    }
                }
            }
        },
        "/Destiny/Advisors/": {
            "summary": "Destiny.GetPublicAdvisors",
            "description": "Returns information about current daily, weekly and special events.",
            "get": {
                "tags": [
                    "Destiny",
                    "Unofficial"
                ],
                "description": "Returns information about current daily, weekly and special events.",
                "operationId": "Destiny.GetPublicAdvisors",
                "parameters": [
                    {
                        "name": "definitions",
                        "in": "query",
                        "description": "Include definitions in the response. Use while testing.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Destiny.GetPublicAdvisors"
                    }
                }
            }
        },
        "/Destiny/Advisors/Xur/": {
            "summary": "Destiny.GetPublicXurVendor",
            "description": "Returns advisor information about the vendor Xur in Destiny.",
            "get": {
                "tags": [
                    "Destiny",
                    "Unofficial"
                ],
                "description": "Returns advisor information about the vendor Xur in Destiny.",
                "operationId": "Destiny.GetPublicXurVendor",
                "parameters": [
                    {
                        "name": "definitions",
                        "in": "query",
                        "description": "Include definitions in the response. Use while testing.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Destiny.GetPublicXurVendor"
                    }
                }
            }
        },
        "/Destiny/Vendors/{vendorHash}/": {
            "summary": "Destiny.GetPublicVendor",
            "description": "Returns Public information for a given Vendor.",
            "get": {
                "tags": [
                    "Destiny",
                    "Unofficial"
                ],
                "description": "Returns Public information for a given Vendor.",
                "operationId": "Destiny.GetPublicVendor",
                "parameters": [
                    {
                        "name": "vendorHash",
                        "in": "path",
                        "description": "A valid vendorHash.",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "required": true
                    },
                    {
                        "name": "definitions",
                        "in": "query",
                        "description": "Include definitions in the response. Use while testing.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Destiny.GetPublicVendor"
                    }
                }
            }
        },
        "/Destiny/{membershipType}/MyAccount/Character/{characterId}/Advisors/": {
            "summary": "Destiny.GetAdvisorsForCurrentCharacter",
            "description": "Returns advisor information about a given character.",
            "get": {
                "tags": [
                    "Destiny",
                    "Unofficial"
                ],
                "description": "Returns advisor information about a given character.",
                "operationId": "Destiny.GetAdvisorsForCurrentCharacter",
                "parameters": [
                    {
                        "name": "membershipType",
                        "in": "path",
                        "description": "The type of account for which info will be extracted.",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/BungieMembershipType"
                        }
                    },
                    {
                        "name": "characterId",
                        "in": "path",
                        "description": "",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "definitions",
                        "in": "query",
                        "description": "Include definitions in the response. Use while testing.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Destiny.GetAdvisorsForCurrentCharacter"
                    }
                }
            }
        },
        "/Destiny/{membershipType}/Account/{destinyMembershipId}/Character/{characterId}/Advisors/": {
            "summary": "Destiny.GetAdvisorsForCharacter",
            "description": "Returns advisor information about a given character.",
            "get": {
                "tags": [
                    "Destiny",
                    "Unofficial"
                ],
                "description": "Returns advisor information about a given character.",
                "operationId": "Destiny.GetAdvisorsForCharacter",
                "parameters": [
                    {
                        "name": "membershipType",
                        "in": "path",
                        "description": "The type of account for which info will be extracted.",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/BungieMembershipType"
                        }
                    },
                    {
                        "name": "destinyMembershipId",
                        "in": "path",
                        "description": "Destiny membership ID.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "characterId",
                        "in": "path",
                        "description": "",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "definitions",
                        "in": "query",
                        "description": "Include definitions in the response. Use while testing.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Destiny.GetAdvisorsForCharacter"
                    }
                }
            }
        },
        "/Destiny/Events/": {
            "summary": "Destiny.GetSpecialEventAdvisors",
            "description": "Returns a list of currently active events.",
            "get": {
                "tags": [
                    "Destiny",
                    "Unofficial"
                ],
                "description": "Returns a list of currently active events.",
                "operationId": "Destiny.GetSpecialEventAdvisors",
                "parameters": [
                    {
                        "name": "definitions",
                        "in": "query",
                        "description": "Include definitions in the response. Use while testing.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Destiny.GetSpecialEventAdvisors"
                    }
                }
            }
        },
        "/Destiny/LiveTiles/": {
            "summary": "Destiny.GetDestinyLiveTileContentItems",
            "description": "Returns a list of \"tiles\" used on the Bungie.net website.",
            "get": {
                "tags": [
                    "Destiny",
                    "Unofficial"
                ],
                "description": "Returns a list of \"tiles\" used on the Bungie.net website.",
                "operationId": "Destiny.GetDestinyLiveTileContentItems",
                "parameters": [],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Destiny.GetDestinyLiveTileContentItems"
                    }
                }
            }
        },
        "/Destiny/{membershipType}/MyAccount/Advisors/Bonds/": {
            "summary": "Destiny.GetBondAdvisors",
            "description": "",
            "get": {
                "tags": [
                    "Destiny",
                    "Unofficial"
                ],
                "description": "",
                "operationId": "Destiny.GetBondAdvisors",
                "parameters": [
                    {
                        "name": "membershipType",
                        "in": "path",
                        "description": "The type of account for which info will be extracted.",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/BungieMembershipType"
                        }
                    },
                    {
                        "name": "definitions",
                        "in": "query",
                        "description": "Include definitions in the response. Use while testing.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Destiny.GetBondAdvisors"
                    }
                }
            }
        },
        "/Destiny/Vendors/{vendorHash}/Metadata/": {
            "summary": "Destiny.GetPublicVendorWithMetadata",
            "description": "Returns Public information for a given Vendor, with metadata.",
            "get": {
                "tags": [
                    "Destiny",
                    "Unofficial"
                ],
                "description": "Returns Public information for a given Vendor, with metadata.",
                "operationId": "Destiny.GetPublicVendorWithMetadata",
                "parameters": [
                    {
                        "name": "vendorHash",
                        "in": "path",
                        "description": "A valid vendorHash.",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "required": true
                    },
                    {
                        "name": "definitions",
                        "in": "query",
                        "description": "Include definitions in the response. Use while testing.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Destiny.GetPublicVendorWithMetadata"
                    }
                }
            }
        },
        "/Destiny/{membershipType}/MyAccount/Character/{characterId}/Vendor/{vendorHash}/Metadata/": {
            "summary": "Destiny.GetVendorForCurrentCharacterWithMetadata",
            "description": "Returns information about a Vendor for a given Destiny character with metadata.",
            "get": {
                "tags": [
                    "Destiny",
                    "Unofficial"
                ],
                "description": "Returns information about a Vendor for a given Destiny character with metadata.",
                "operationId": "Destiny.GetVendorForCurrentCharacterWithMetadata",
                "parameters": [
                    {
                        "name": "membershipType",
                        "in": "path",
                        "description": "The type of account for which info will be extracted.",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/BungieMembershipType"
                        }
                    },
                    {
                        "name": "characterId",
                        "in": "path",
                        "description": "",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "vendorHash",
                        "in": "path",
                        "description": "A valid vendorHash.",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "required": true
                    },
                    {
                        "name": "definitions",
                        "in": "query",
                        "description": "Include definitions in the response. Use while testing.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Destiny.GetVendorForCurrentCharacterWithMetadata"
                    }
                }
            }
        },
        "/Destiny/{membershipType}/MyAccount/Character/{characterId}/Vendor/{vendorHash}/Item/{vendorItemId}/Metadata/": {
            "summary": "Destiny.GetVendorItemDetailForCurrentCharacterWithMetadata",
            "description": "Returns an item from a Vendor's inventory for a given character with metadata.",
            "get": {
                "tags": [
                    "Destiny",
                    "Unofficial"
                ],
                "description": "Returns an item from a Vendor's inventory for a given character with metadata.",
                "operationId": "Destiny.GetVendorItemDetailForCurrentCharacterWithMetadata",
                "parameters": [
                    {
                        "name": "membershipType",
                        "in": "path",
                        "description": "The type of account for which info will be extracted.",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/BungieMembershipType"
                        }
                    },
                    {
                        "name": "characterId",
                        "in": "path",
                        "description": "",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "vendorHash",
                        "in": "path",
                        "description": "A valid vendorHash.",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "required": true
                    },
                    {
                        "name": "vendorItemId",
                        "in": "path",
                        "description": "A valid vendorItemIndex see [[GetVendorForCurrentCharacter]].",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "required": true
                    },
                    {
                        "name": "definitions",
                        "in": "query",
                        "description": "Include definitions in the response. Use while testing.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Destiny.GetVendorItemDetailForCurrentCharacterWithMetadata"
                    }
                }
            }
        },
        "/Destiny/TransferItem/": {
            "summary": "Destiny.TransferItem",
            "description": "Moves items to and from a character and the vault.",
            "post": {
                "tags": [
                    "Destiny",
                    "Unofficial"
                ],
                "description": "Moves items to and from a character and the vault.",
                "operationId": "Destiny.TransferItem",
                "parameters": [],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Destiny.TransferItem"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "MoveEquipDestinyItems"
                        ]
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "membershipType": {
                                        "$ref": "#/components/schemas/BungieMembershipType",
                                        "description": "The type of account for which info will be extracted."
                                    },
                                    "itemReferenceHash": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": "The inventoryItemHash for an item."
                                    },
                                    "itemId": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": "The instanceId of an equipable item. Should be \"0\" otherwise."
                                    },
                                    "stackSize": {
                                        "type": "integer",
                                        "format": "int32",
                                        "description": "How many items to transfer. Should be \"1\" for equipable items."
                                    },
                                    "characterId": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": "A valid characterId that is associated with the given account."
                                    },
                                    "transferToVault": {
                                        "type": "boolean",
                                        "description": "Move the item to or from the vault; true or false"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/Destiny/EquipItem/": {
            "summary": "Destiny.EquipItem",
            "description": "Equips an item from a character's inventory. The endpoint will fail if the character is logged in and doing an activity.",
            "post": {
                "tags": [
                    "Destiny",
                    "Unofficial"
                ],
                "description": "Equips an item from a character's inventory. The endpoint will fail if the character is logged in and doing an activity.",
                "operationId": "Destiny.EquipItem",
                "parameters": [],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Destiny.EquipItem"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "MoveEquipDestinyItems"
                        ]
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "membershipType": {
                                        "$ref": "#/components/schemas/BungieMembershipType",
                                        "description": "The type of account for which info will be extracted."
                                    },
                                    "itemId": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": "The instanceId of an equipable item. Should be \"0\" otherwise."
                                    },
                                    "characterId": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": "A valid characterId that is associated with the given account."
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/Destiny/EquipItems/": {
            "summary": "Destiny.EquipItems",
            "description": "Equips multiple items from a character's inventory and returns the updated inventory and character information. The endpoint will fail if the character is logged in and doing an activity.\n\n**Note:** This is an [experimental endpoint](https://www.bungie.net/en/Clan/Post/39966/187691777/1) that was accidentally left in. While it should work as intended, it may return [incorrect response data and has a higher bandwidth](https://www.bungie.net/en/Clan/Post/39966/196303703/0/0) than simply making multiple [[EquipItem]] requests.",
            "post": {
                "tags": [
                    "Destiny",
                    "Unofficial"
                ],
                "description": "Equips multiple items from a character's inventory and returns the updated inventory and character information. The endpoint will fail if the character is logged in and doing an activity.\n\n**Note:** This is an [experimental endpoint](https://www.bungie.net/en/Clan/Post/39966/187691777/1) that was accidentally left in. While it should work as intended, it may return [incorrect response data and has a higher bandwidth](https://www.bungie.net/en/Clan/Post/39966/196303703/0/0) than simply making multiple [[EquipItem]] requests.",
                "operationId": "Destiny.EquipItems",
                "parameters": [],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Destiny.EquipItems"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "MoveEquipDestinyItems"
                        ]
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "membershipType": {
                                        "$ref": "#/components/schemas/BungieMembershipType",
                                        "description": "The type of account for which info will be extracted."
                                    },
                                    "itemIds": {
                                        "type": "array",
                                        "items": {
                                            "description": "The instanceId of an equipable item. Should be \"0\" otherwise.",
                                            "type": "integer",
                                            "format": "int64"
                                        },
                                        "description": "An array of item instanceIds to equip."
                                    },
                                    "characterId": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": "A valid characterId that is associated with the given account."
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/Destiny/SetLockState/": {
            "summary": "Destiny.SetItemLockState",
            "description": "Changes the lock state on an equipable item.",
            "post": {
                "tags": [
                    "Destiny",
                    "Unofficial"
                ],
                "description": "Changes the lock state on an equipable item.",
                "operationId": "Destiny.SetItemLockState",
                "parameters": [],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Destiny.SetItemLockState"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "MoveEquipDestinyItems"
                        ]
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "membershipType": {
                                        "$ref": "#/components/schemas/BungieMembershipType",
                                        "description": "The type of account for which info will be extracted."
                                    },
                                    "itemId": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": "A valid instanceId of an item to lock/unlock."
                                    },
                                    "characterId": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": "A valid characterId that is associated with the given account."
                                    },
                                    "state": {
                                        "type": "boolean",
                                        "description": "The item lock state, true to lock, false to unlock."
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/Destiny/SetQuestTrackedState/": {
            "summary": "Destiny.SetQuestTrackedState",
            "description": "Set the track state of a given quest.",
            "post": {
                "tags": [
                    "Destiny",
                    "Unofficial"
                ],
                "description": "Set the track state of a given quest.",
                "operationId": "Destiny.SetQuestTrackedState",
                "parameters": [],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Destiny.SetQuestTrackedState"
                    }
                },
                "security": [
                    {
                        "oauth2": [
                            "MoveEquipDestinyItems"
                        ]
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "membershipType": {
                                        "$ref": "#/components/schemas/BungieMembershipType",
                                        "description": "The type of account for which info will be extracted."
                                    },
                                    "destinyMembershipId": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": "Destiny membership ID."
                                    },
                                    "itemId": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": "The unique item hash of the quest item."
                                    },
                                    "characterId": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": "A valid characterId that is associated with the given account."
                                    },
                                    "state": {
                                        "type": "boolean",
                                        "description": "true = tracked, false = not-tracked"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/Destiny/Stats/Definition/": {
            "summary": "Destiny.GetHistoricalStatsDefinition",
            "description": "",
            "get": {
                "tags": [
                    "Destiny",
                    "Unofficial"
                ],
                "description": "",
                "operationId": "Destiny.GetHistoricalStatsDefinition",
                "parameters": [],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Destiny.GetHistoricalStatsDefinition"
                    }
                }
            }
        },
        "/Destiny/Stats/{membershipType}/{destinyMembershipId}/{characterId}/": {
            "summary": "Destiny.GetHistoricalStats",
            "description": "Returns historical stat information about a given Destiny character.",
            "get": {
                "tags": [
                    "Destiny",
                    "Unofficial"
                ],
                "description": "Returns historical stat information about a given Destiny character.",
                "operationId": "Destiny.GetHistoricalStats",
                "parameters": [
                    {
                        "name": "membershipType",
                        "in": "path",
                        "description": "The type of account for which info will be extracted.",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/BungieMembershipType"
                        }
                    },
                    {
                        "name": "destinyMembershipId",
                        "in": "path",
                        "description": "Destiny membership ID.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "characterId",
                        "in": "path",
                        "description": "",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "periodType",
                        "in": "query",
                        "description": "Indicates a specific period type to return.",
                        "schema": {
                            "$ref": "#/components/schemas/Destiny.PeriodType"
                        }
                    },
                    {
                        "name": "modes",
                        "in": "query",
                        "description": "Game modes to return. Comma separated.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/Destiny.ActivityModeType"
                            }
                        }
                    },
                    {
                        "name": "groups",
                        "in": "query",
                        "description": "Group of stats to include, otherwise only general stats are returned. Comma separated.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/Destiny.StatsGroupType"
                            }
                        }
                    },
                    {
                        "name": "monthstart",
                        "in": "query",
                        "description": "First month to return when monthly stats are requested. Use the format YYYY-MM.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "monthend",
                        "in": "query",
                        "description": "Last month to return when monthly stats are requested. Use the format YYYY-MM.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "daystart",
                        "in": "query",
                        "description": "First day to return when daily stats are requested. Use the format YYYY-MM-DD.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "dayend",
                        "in": "query",
                        "description": "Last day to return when daily stats are requested. Use the format YYYY-MM-DD.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Destiny.GetHistoricalStats"
                    }
                }
            }
        },
        "/Destiny/Stats/Account/{membershipType}/{destinyMembershipId}/": {
            "summary": "Destiny.GetHistoricalStatsForAccount",
            "description": "Gets aggregate historical stats organized around each character for a given account.",
            "get": {
                "tags": [
                    "Destiny",
                    "Unofficial"
                ],
                "description": "Gets aggregate historical stats organized around each character for a given account.",
                "operationId": "Destiny.GetHistoricalStatsForAccount",
                "parameters": [
                    {
                        "name": "membershipType",
                        "in": "path",
                        "description": "The type of account for which info will be extracted.",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/BungieMembershipType"
                        }
                    },
                    {
                        "name": "destinyMembershipId",
                        "in": "path",
                        "description": "Destiny membership ID.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "groups",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Destiny.GetHistoricalStatsForAccount"
                    }
                }
            }
        },
        "/Destiny/Stats/ActivityHistory/{membershipType}/{destinyMembershipId}/{characterId}/": {
            "summary": "Destiny.GetActivityHistory",
            "description": "Returns recent activity history for a given character.",
            "get": {
                "tags": [
                    "Destiny",
                    "Unofficial"
                ],
                "description": "Returns recent activity history for a given character.",
                "operationId": "Destiny.GetActivityHistory",
                "parameters": [
                    {
                        "name": "membershipType",
                        "in": "path",
                        "description": "The type of account for which info will be extracted.",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/BungieMembershipType"
                        }
                    },
                    {
                        "name": "destinyMembershipId",
                        "in": "path",
                        "description": "Destiny membership ID.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "characterId",
                        "in": "path",
                        "description": "",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "mode",
                        "in": "query",
                        "description": "Game mode to return. Required.",
                        "schema": {
                            "$ref": "#/components/schemas/Destiny.ActivityModeType"
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "The number of results to return.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The current page to return. Starts at 1.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "definitions",
                        "in": "query",
                        "description": "Include definitions in the response. Use while testing.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Destiny.GetActivityHistory"
                    }
                }
            }
        },
        "/Destiny/Stats/UniqueWeapons/{membershipType}/{destinyMembershipId}/{characterId}/": {
            "summary": "Destiny.GetUniqueWeaponHistory",
            "description": "Gets details about unique weapon usage, including all exotic weapons.",
            "get": {
                "tags": [
                    "Destiny",
                    "Unofficial"
                ],
                "description": "Gets details about unique weapon usage, including all exotic weapons.",
                "operationId": "Destiny.GetUniqueWeaponHistory",
                "parameters": [
                    {
                        "name": "membershipType",
                        "in": "path",
                        "description": "The type of account for which info will be extracted.",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/BungieMembershipType"
                        }
                    },
                    {
                        "name": "destinyMembershipId",
                        "in": "path",
                        "description": "Destiny membership ID.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "characterId",
                        "in": "path",
                        "description": "",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "definitions",
                        "in": "query",
                        "description": "Include definitions in the response. Use while testing.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Destiny.GetUniqueWeaponHistory"
                    }
                }
            }
        },
        "/Destiny/Stats/Leaderboards/{membershipType}/{destinyMembershipId}/": {
            "summary": "Destiny.GetLeaderboards",
            "description": "Returns leaderboard stats compared against friends. Note you may need to re-authenticate with PSN/Xbox in order to see full rankings.",
            "get": {
                "tags": [
                    "Destiny",
                    "Unofficial"
                ],
                "description": "Returns leaderboard stats compared against friends. Note you may need to re-authenticate with PSN/Xbox in order to see full rankings.",
                "operationId": "Destiny.GetLeaderboards",
                "parameters": [
                    {
                        "name": "membershipType",
                        "in": "path",
                        "description": "The type of account for which info will be extracted.",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/BungieMembershipType"
                        }
                    },
                    {
                        "name": "destinyMembershipId",
                        "in": "path",
                        "description": "Destiny membership ID.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "modes",
                        "in": "query",
                        "description": "Game modes to return. Comma separated.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/Destiny.ActivityModeType"
                            }
                        }
                    },
                    {
                        "name": "statid",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "maxtop",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Destiny.GetLeaderboards"
                    }
                }
            }
        },
        "/Destiny/Stats/ClanLeaderboards/{clanId}/": {
            "summary": "Destiny.GetClanLeaderboards",
            "description": "",
            "get": {
                "tags": [
                    "Destiny",
                    "Unofficial"
                ],
                "description": "",
                "operationId": "Destiny.GetClanLeaderboards",
                "parameters": [
                    {
                        "name": "clanId",
                        "in": "path",
                        "description": "A valid clan ID.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": true
                    },
                    {
                        "name": "modes",
                        "in": "query",
                        "description": "Game modes to return. Comma separated.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/Destiny.ActivityModeType"
                            }
                        }
                    },
                    {
                        "name": "statid",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "maxtop",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Destiny.GetClanLeaderboards"
                    }
                }
            }
        },
        "/Destiny/Stats/LeaderboardsForPsn/": {
            "summary": "Destiny.GetLeaderboardsForPsn",
            "description": "Returns leaderboard stats compared against PSN friends. Note, you may need re-authenticate with PSN in order to see full rankings.",
            "get": {
                "tags": [
                    "Destiny",
                    "Unofficial"
                ],
                "description": "Returns leaderboard stats compared against PSN friends. Note, you may need re-authenticate with PSN in order to see full rankings.",
                "operationId": "Destiny.GetLeaderboardsForPsn",
                "parameters": [
                    {
                        "name": "modes",
                        "in": "query",
                        "description": "Game modes to return. Comma separated.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/Destiny.ActivityModeType"
                            }
                        }
                    },
                    {
                        "name": "code",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Destiny.GetLeaderboardsForPsn"
                    }
                }
            }
        },
        "/Destiny/Stats/Leaderboards/{param1}/{param2}/{param3}/": {
            "summary": "Destiny.GetLeaderboardsForCharacter",
            "description": "",
            "get": {
                "tags": [
                    "Destiny",
                    "Unofficial"
                ],
                "description": "",
                "operationId": "Destiny.GetLeaderboardsForCharacter",
                "parameters": [
                    {
                        "name": "param1",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "param2",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "param3",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "modes",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "statid",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "maxtop",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Destiny.GetLeaderboardsForCharacter"
                    }
                }
            }
        },
        "/Destiny/Stats/PostGameCarnageReport/{activityInstanceId}/": {
            "summary": "Destiny.GetPostGameCarnageReport",
            "description": "Gets the available post game carnage report for the activity ID.",
            "get": {
                "tags": [
                    "Destiny",
                    "Unofficial"
                ],
                "description": "Gets the available post game carnage report for the activity ID.",
                "operationId": "Destiny.GetPostGameCarnageReport",
                "parameters": [
                    {
                        "name": "activityInstanceId",
                        "in": "path",
                        "description": "A valid activityInstanceId.",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "required": true
                    },
                    {
                        "name": "definitions",
                        "in": "query",
                        "description": "Include definitions in the response. Use while testing.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Destiny.GetPostGameCarnageReport"
                    }
                }
            }
        },
        "/Destiny/Stats/ActivityBlob/{param1}/": {
            "summary": "Destiny.GetActivityBlob",
            "description": "",
            "get": {
                "tags": [
                    "Destiny",
                    "Unofficial"
                ],
                "description": "",
                "operationId": "Destiny.GetActivityBlob",
                "parameters": [
                    {
                        "name": "param1",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Destiny.GetActivityBlob"
                    }
                }
            }
        },
        "/Destiny/Stats/AggregateActivityStats/{membershipType}/{destinyMembershipId}/{characterId}/": {
            "summary": "Destiny.GetDestinyAggregateActivityStats",
            "description": "Gets all activities the character has participated in together with aggregate statistics for those activities.",
            "get": {
                "tags": [
                    "Destiny",
                    "Unofficial"
                ],
                "description": "Gets all activities the character has participated in together with aggregate statistics for those activities.",
                "operationId": "Destiny.GetDestinyAggregateActivityStats",
                "parameters": [
                    {
                        "name": "membershipType",
                        "in": "path",
                        "description": "The type of account for which info will be extracted.",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/BungieMembershipType"
                        }
                    },
                    {
                        "name": "destinyMembershipId",
                        "in": "path",
                        "description": "Destiny membership ID.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "characterId",
                        "in": "path",
                        "description": "",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "definitions",
                        "in": "query",
                        "description": "Include definitions in the response. Use while testing.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Destiny.GetDestinyAggregateActivityStats"
                    }
                }
            }
        },
        "/Destiny/{membershipType}/Stats/GetMembershipIdByDisplayName/{displayName}/": {
            "summary": "Destiny.GetMembershipIdByDisplayName",
            "description": "Returns the numerical id of a player based on their display name, zero if not found.",
            "get": {
                "tags": [
                    "Destiny",
                    "Unofficial"
                ],
                "description": "Returns the numerical id of a player based on their display name, zero if not found.",
                "operationId": "Destiny.GetMembershipIdByDisplayName",
                "parameters": [
                    {
                        "name": "membershipType",
                        "in": "path",
                        "description": "The type of account for which info will be extracted.",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/BungieMembershipType"
                        }
                    },
                    {
                        "name": "displayName",
                        "in": "path",
                        "description": "A valid PSN Id or Gamertag display name.",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "ignorecase",
                        "in": "query",
                        "description": "Default is false when not specified. True to cause a caseless search to be used.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Destiny.GetMembershipIdByDisplayName"
                    }
                }
            }
        },
        "/Destiny/Stats/GetExcellenceBadges/{membershipType}/{destinyMembershipId}/": {
            "summary": "Destiny.GetExcellenceBadges",
            "description": "Returns Destiny excellence badges for a given account. No longer in use.",
            "get": {
                "tags": [
                    "Destiny",
                    "Unofficial"
                ],
                "description": "Returns Destiny excellence badges for a given account. No longer in use.",
                "operationId": "Destiny.GetExcellenceBadges",
                "parameters": [
                    {
                        "name": "membershipType",
                        "in": "path",
                        "description": "The type of account for which info will be extracted.",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/BungieMembershipType"
                        }
                    },
                    {
                        "name": "destinyMembershipId",
                        "in": "path",
                        "description": "Destiny membership ID.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "definitions",
                        "in": "query",
                        "description": "Include definitions in the response. Use while testing.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Destiny.GetExcellenceBadges"
                    }
                }
            }
        },
        "/Destiny/Vanguard/Grimoire/{membershipType}/": {
            "summary": "Destiny.GetMyGrimoire",
            "description": "Returns the Grimoire for the currently signed in account.",
            "get": {
                "tags": [
                    "Destiny",
                    "Unofficial"
                ],
                "description": "Returns the Grimoire for the currently signed in account.",
                "operationId": "Destiny.GetMyGrimoire",
                "parameters": [
                    {
                        "name": "membershipType",
                        "in": "path",
                        "description": "The type of account for which info will be extracted.",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/BungieMembershipType"
                        }
                    },
                    {
                        "name": "definitions",
                        "in": "query",
                        "description": "Include definitions in the response. Use while testing.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "flavour",
                        "in": "query",
                        "description": "Indicates flavour stats should be included with player card data. More testing needed.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "single",
                        "in": "query",
                        "description": "Return data for a single cardId.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Destiny.GetMyGrimoire"
                    }
                }
            }
        },
        "/Destiny/Vanguard/Grimoire/{membershipType}/{destinyMembershipId}/": {
            "summary": "Destiny.GetGrimoireByMembership",
            "description": "Returns the Grimoire for a given account.",
            "get": {
                "tags": [
                    "Destiny",
                    "Unofficial"
                ],
                "description": "Returns the Grimoire for a given account.",
                "operationId": "Destiny.GetGrimoireByMembership",
                "parameters": [
                    {
                        "name": "membershipType",
                        "in": "path",
                        "description": "The type of account for which info will be extracted.",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/BungieMembershipType"
                        }
                    },
                    {
                        "name": "destinyMembershipId",
                        "in": "path",
                        "description": "Destiny membership ID.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "definitions",
                        "in": "query",
                        "description": "Include definitions in the response. Use while testing.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "flavour",
                        "in": "query",
                        "description": "Indicates flavour stats should be included with player card data. More testing needed.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "single",
                        "in": "query",
                        "description": "Return data for a single cardId.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Destiny.GetGrimoireByMembership"
                    }
                }
            }
        },
        "/Destiny/Vanguard/Grimoire/Definition/": {
            "summary": "Destiny.GetGrimoireDefinition",
            "description": "Returns Grimoire definitions. This is the equivalent pulling the [[GrimoireDefinition]] from the [[Manifest]].",
            "get": {
                "tags": [
                    "Destiny",
                    "Unofficial"
                ],
                "description": "Returns Grimoire definitions. This is the equivalent pulling the [[GrimoireDefinition]] from the [[Manifest]].",
                "operationId": "Destiny.GetGrimoireDefinition",
                "parameters": [],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Destiny.GetGrimoireDefinition"
                    }
                }
            }
        },
        "/Destiny/Explorer/Items/": {
            "summary": "Destiny.GetDestinyExplorerItems",
            "description": "Advanced InventoryItem search.",
            "get": {
                "tags": [
                    "Destiny",
                    "Unofficial"
                ],
                "description": "Advanced InventoryItem search.",
                "operationId": "Destiny.GetDestinyExplorerItems",
                "parameters": [
                    {
                        "name": "count",
                        "in": "query",
                        "description": "The number of results to return. Default is 10.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Filter by name.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "Order results.",
                        "schema": {
                            "$ref": "#/components/schemas/Destiny.ExplorerOrderBy"
                        }
                    },
                    {
                        "name": "rarity",
                        "in": "query",
                        "description": "Filter by item rarity.",
                        "schema": {
                            "$ref": "#/components/schemas/TierType"
                        }
                    },
                    {
                        "name": "damageTypes",
                        "in": "query",
                        "description": "Filter by damage type.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/DamageType"
                            }
                        }
                    },
                    {
                        "name": "definitions",
                        "in": "query",
                        "description": "Include definitions in the response. Use while testing.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "rarity",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "step",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "categories",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "weaponPerformance",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "impactEffects",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "guardianAttributes",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "lightAbilities",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "damageTypes",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "matchrandomsteps",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "definitions",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sourcecat",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sourcehash",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Destiny.GetDestinyExplorerItems"
                    }
                }
            }
        },
        "/Destiny/Explorer/TalentNodeSteps/": {
            "summary": "Destiny.GetDestinyExplorerTalentNodeSteps",
            "description": "Advanced search for TalentNodes.",
            "get": {
                "tags": [
                    "Destiny",
                    "Unofficial"
                ],
                "description": "Advanced search for TalentNodes.",
                "operationId": "Destiny.GetDestinyExplorerTalentNodeSteps",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The current page to return. Starts at 1.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "The number of results per page. Default is 10.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Filter by name.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "damageTypes",
                        "in": "query",
                        "description": "Filter by damage type.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/DamageType"
                            }
                        }
                    },
                    {
                        "name": "definitions",
                        "in": "query",
                        "description": "Include definitions in the response. Use while testing.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "impactEffects",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "guardianAttributes",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "lightAbilities",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "damageTypes",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "definitions",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Destiny.GetDestinyExplorerTalentNodeSteps"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Destiny.DefinitionType": {
                "enum": [
                    "0",
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                    "6",
                    "7",
                    "8",
                    "9",
                    "10",
                    "11",
                    "12",
                    "13",
                    "14",
                    "15",
                    "16",
                    "17",
                    "18",
                    "19",
                    "20",
                    "21",
                    "22",
                    "23"
                ],
                "type": "integer",
                "format": "int32",
                "x-enum-values": [
                    {
                        "numericValue": "0",
                        "identifier": "None"
                    },
                    {
                        "numericValue": "1",
                        "identifier": "Activity"
                    },
                    {
                        "numericValue": "2",
                        "identifier": "ActivityType"
                    },
                    {
                        "numericValue": "3",
                        "identifier": "Class"
                    },
                    {
                        "numericValue": "4",
                        "identifier": "Gender"
                    },
                    {
                        "numericValue": "5",
                        "identifier": "InventoryBucket"
                    },
                    {
                        "numericValue": "6",
                        "identifier": "InventoryItem"
                    },
                    {
                        "numericValue": "7",
                        "identifier": "Progression"
                    },
                    {
                        "numericValue": "8",
                        "identifier": "Race"
                    },
                    {
                        "numericValue": "9",
                        "identifier": "Stat"
                    },
                    {
                        "numericValue": "10",
                        "identifier": "TalentGrid"
                    },
                    {
                        "numericValue": "11",
                        "identifier": "StatGroup"
                    },
                    {
                        "numericValue": "12",
                        "identifier": "UnlockFlag"
                    },
                    {
                        "numericValue": "13",
                        "identifier": "Vendor"
                    },
                    {
                        "numericValue": "14",
                        "identifier": "Destination"
                    },
                    {
                        "numericValue": "15",
                        "identifier": "Place"
                    },
                    {
                        "numericValue": "16",
                        "identifier": "DirectorBook"
                    },
                    {
                        "numericValue": "17",
                        "identifier": "MaterialRequirement"
                    },
                    {
                        "numericValue": "18",
                        "identifier": "SandboxPerk"
                    },
                    {
                        "numericValue": "19",
                        "identifier": "ArtDye"
                    },
                    {
                        "numericValue": "20",
                        "identifier": "ArtDyeChannel"
                    },
                    {
                        "numericValue": "21",
                        "identifier": "ActivityBundle"
                    },
                    {
                        "numericValue": "22",
                        "identifier": "GearAsset"
                    },
                    {
                        "numericValue": "23",
                        "identifier": "GrimoireCard"
                    }
                ]
            },
            "Destiny.SearchDestinyPlayer": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/User.UserInfoCard"
                }
            },
            "Destiny.PeriodType": {
                "enum": [
                    "0",
                    "1",
                    "2",
                    "3",
                    "4"
                ],
                "type": "integer",
                "format": "int32",
                "x-enum-values": [
                    {
                        "numericValue": "0",
                        "identifier": "None"
                    },
                    {
                        "numericValue": "1",
                        "identifier": "Daily"
                    },
                    {
                        "numericValue": "2",
                        "identifier": "Monthly"
                    },
                    {
                        "numericValue": "3",
                        "identifier": "AllTime"
                    },
                    {
                        "numericValue": "4",
                        "identifier": "Activity"
                    }
                ]
            },
            "User.UserInfoCard": {
                "type": "object",
                "properties": {
                    "supplementalDisplayName": {
                        "type": "string",
                        "description": "A platform specific additional display name - ex: psn Real Name, bnet Unique Name, etc."
                    },
                    "iconPath": {
                        "type": "string",
                        "description": "URL the Icon if available."
                    },
                    "membershipType": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/BungieMembershipType"
                            }
                        ],
                        "description": "Type of the membership."
                    },
                    "membershipId": {
                        "type": "integer",
                        "description": "Membership ID as they user is known in the Accounts service",
                        "format": "int64"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Display Name the player has chosen for themselves. The display name is optional when the data type is used as input to a platform API."
                    }
                },
                "description": "This contract supplies basic information commonly used to display a minimal amount of information about a user. Take care to not add more properties here unless the property applies in all (or at least the majority) of the situations where UserInfoCard is used. Avoid adding game specific or platform specific details here. In cases where UserInfoCard is a subset of the data needed in a contract, use UserInfoCard as a property of other contracts."
            },
            "Exceptions.PlatformErrorCodes": {
                "enum": [
                    "0",
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                    "6",
                    "7",
                    "8",
                    "9",
                    "10",
                    "11",
                    "12",
                    "13",
                    "14",
                    "15",
                    "16",
                    "17",
                    "18",
                    "19",
                    "20",
                    "21",
                    "22",
                    "23",
                    "24",
                    "25",
                    "26",
                    "27",
                    "28",
                    "29",
                    "30",
                    "31",
                    "32",
                    "33",
                    "34",
                    "35",
                    "36",
                    "37",
                    "38",
                    "39",
                    "40",
                    "41",
                    "42",
                    "43",
                    "44",
                    "45",
                    "46",
                    "47",
                    "48",
                    "49",
                    "50",
                    "51",
                    "52",
                    "53",
                    "89",
                    "90",
                    "91",
                    "92",
                    "93",
                    "94",
                    "95",
                    "96",
                    "97",
                    "98",
                    "99",
                    "100",
                    "101",
                    "102",
                    "103",
                    "104",
                    "105",
                    "106",
                    "107",
                    "108",
                    "109",
                    "110",
                    "111",
                    "112",
                    "113",
                    "115",
                    "116",
                    "117",
                    "118",
                    "119",
                    "120",
                    "121",
                    "122",
                    "123",
                    "124",
                    "125",
                    "126",
                    "127",
                    "128",
                    "129",
                    "130",
                    "131",
                    "132",
                    "133",
                    "134",
                    "135",
                    "136",
                    "137",
                    "138",
                    "139",
                    "140",
                    "141",
                    "142",
                    "143",
                    "144",
                    "145",
                    "146",
                    "147",
                    "148",
                    "149",
                    "150",
                    "151",
                    "152",
                    "153",
                    "154",
                    "155",
                    "156",
                    "157",
                    "158",
                    "159",
                    "160",
                    "161",
                    "162",
                    "163",
                    "164",
                    "165",
                    "166",
                    "167",
                    "168",
                    "169",
                    "170",
                    "171",
                    "172",
                    "173",
                    "174",
                    "175",
                    "200",
                    "201",
                    "202",
                    "203",
                    "204",
                    "205",
                    "206",
                    "207",
                    "208",
                    "209",
                    "210",
                    "211",
                    "212",
                    "213",
                    "214",
                    "215",
                    "216",
                    "217",
                    "218",
                    "219",
                    "220",
                    "221",
                    "222",
                    "223",
                    "224",
                    "225",
                    "226",
                    "227",
                    "300",
                    "301",
                    "302",
                    "303",
                    "304",
                    "305",
                    "306",
                    "307",
                    "308",
                    "309",
                    "310",
                    "311",
                    "312",
                    "313",
                    "400",
                    "500",
                    "501",
                    "502",
                    "503",
                    "504",
                    "505",
                    "506",
                    "507",
                    "508",
                    "509",
                    "510",
                    "511",
                    "512",
                    "513",
                    "514",
                    "515",
                    "516",
                    "517",
                    "518",
                    "519",
                    "520",
                    "521",
                    "522",
                    "523",
                    "524",
                    "525",
                    "526",
                    "527",
                    "528",
                    "529",
                    "530",
                    "531",
                    "532",
                    "533",
                    "534",
                    "535",
                    "536",
                    "537",
                    "538",
                    "539",
                    "540",
                    "541",
                    "542",
                    "543",
                    "544",
                    "555",
                    "556",
                    "557",
                    "558",
                    "559",
                    "560",
                    "561",
                    "562",
                    "563",
                    "564",
                    "565",
                    "566",
                    "567",
                    "568",
                    "569",
                    "570",
                    "571",
                    "572",
                    "573",
                    "574",
                    "575",
                    "576",
                    "577",
                    "578",
                    "579",
                    "580",
                    "581",
                    "582",
                    "583",
                    "584",
                    "585",
                    "586",
                    "587",
                    "588",
                    "589",
                    "590",
                    "591",
                    "592",
                    "593",
                    "594",
                    "595",
                    "601",
                    "602",
                    "603",
                    "604",
                    "605",
                    "606",
                    "607",
                    "608",
                    "609",
                    "610",
                    "611",
                    "612",
                    "613",
                    "614",
                    "615",
                    "616",
                    "617",
                    "618",
                    "619",
                    "620",
                    "621",
                    "622",
                    "623",
                    "624",
                    "625",
                    "626",
                    "627",
                    "628",
                    "629",
                    "630",
                    "631",
                    "632",
                    "633",
                    "634",
                    "635",
                    "636",
                    "637",
                    "638",
                    "639",
                    "641",
                    "642",
                    "643",
                    "644",
                    "646",
                    "647",
                    "648",
                    "649",
                    "650",
                    "651",
                    "652",
                    "653",
                    "654",
                    "655",
                    "656",
                    "657",
                    "658",
                    "659",
                    "660",
                    "661",
                    "662",
                    "663",
                    "664",
                    "665",
                    "666",
                    "667",
                    "668",
                    "669",
                    "670",
                    "671",
                    "672",
                    "673",
                    "674",
                    "675",
                    "676",
                    "677",
                    "678",
                    "679",
                    "680",
                    "681",
                    "682",
                    "683",
                    "684",
                    "685",
                    "686",
                    "687",
                    "688",
                    "689",
                    "690",
                    "691",
                    "692",
                    "693",
                    "694",
                    "695",
                    "696",
                    "697",
                    "698",
                    "699",
                    "701",
                    "702",
                    "703",
                    "704",
                    "705",
                    "706",
                    "707",
                    "750",
                    "801",
                    "802",
                    "803",
                    "804",
                    "805",
                    "806",
                    "807",
                    "900",
                    "901",
                    "902",
                    "903",
                    "904",
                    "905",
                    "906",
                    "907",
                    "908",
                    "909",
                    "1000",
                    "1001",
                    "1002",
                    "1003",
                    "1004",
                    "1005",
                    "1006",
                    "1007",
                    "1008",
                    "1009",
                    "1100",
                    "1204",
                    "1205",
                    "1218",
                    "1223",
                    "1224",
                    "1225",
                    "1226",
                    "1227",
                    "1229",
                    "1230",
                    "1231",
                    "1232",
                    "1233",
                    "1234",
                    "1235",
                    "1236",
                    "1237",
                    "1238",
                    "1239",
                    "1300",
                    "1301",
                    "1302",
                    "1303",
                    "1304",
                    "1305",
                    "1306",
                    "1307",
                    "1308",
                    "1309",
                    "1310",
                    "1311",
                    "1312",
                    "1313",
                    "1314",
                    "1315",
                    "1316",
                    "1317",
                    "1318",
                    "1400",
                    "1401",
                    "1402",
                    "1403",
                    "1404",
                    "1405",
                    "1500",
                    "1501",
                    "1502",
                    "1600",
                    "1601",
                    "1602",
                    "1603",
                    "1604",
                    "1605",
                    "1606",
                    "1607",
                    "1608",
                    "1609",
                    "1610",
                    "1611",
                    "1612",
                    "1613",
                    "1614",
                    "1615",
                    "1616",
                    "1617",
                    "1618",
                    "1619",
                    "1620",
                    "1621",
                    "1622",
                    "1623",
                    "1624",
                    "1625",
                    "1626",
                    "1627",
                    "1628",
                    "1629",
                    "1630",
                    "1631",
                    "1632",
                    "1633",
                    "1634",
                    "1635",
                    "1636",
                    "1637",
                    "1638",
                    "1639",
                    "1640",
                    "1641",
                    "1642",
                    "1643",
                    "1644",
                    "1645",
                    "1646",
                    "1647",
                    "1648",
                    "1649",
                    "1650",
                    "1651",
                    "1652",
                    "1653",
                    "1654",
                    "1655",
                    "1656",
                    "1657",
                    "1658",
                    "1659",
                    "1660",
                    "1661",
                    "1662",
                    "1663",
                    "1664",
                    "1665",
                    "1666",
                    "1667",
                    "1668",
                    "1669",
                    "1670",
                    "1671",
                    "1672",
                    "1673",
                    "1674",
                    "1675",
                    "1676",
                    "1677",
                    "1678",
                    "1679",
                    "1680",
                    "1681",
                    "1682",
                    "1800",
                    "1801",
                    "1802",
                    "1803",
                    "1804",
                    "1805",
                    "1806",
                    "1900",
                    "1901",
                    "1902",
                    "1903",
                    "1904",
                    "1905",
                    "1906",
                    "1907",
                    "1908",
                    "1910",
                    "1911",
                    "1912",
                    "1913",
                    "1914",
                    "2000",
                    "2001",
                    "2002",
                    "2003",
                    "2004",
                    "2005",
                    "2006",
                    "2007",
                    "2008",
                    "2009",
                    "2010",
                    "2011",
                    "2012",
                    "2013",
                    "2014",
                    "2015",
                    "2016",
                    "2017",
                    "2018",
                    "2019",
                    "2020",
                    "2021",
                    "2022",
                    "2023",
                    "2024",
                    "2025",
                    "2026",
                    "2027",
                    "2028",
                    "2029",
                    "2030",
                    "2031",
                    "2032",
                    "2033",
                    "2034",
                    "2035",
                    "2036",
                    "2037",
                    "2038",
                    "2039",
                    "2040",
                    "2041",
                    "2042",
                    "2043",
                    "2044",
                    "2045",
                    "2046",
                    "2047",
                    "2048",
                    "2049",
                    "2050",
                    "2051",
                    "2052",
                    "2053",
                    "2054",
                    "2055",
                    "2056",
                    "2100",
                    "2101",
                    "2102",
                    "2103",
                    "2104",
                    "2105",
                    "2106",
                    "2107",
                    "2108",
                    "2109",
                    "2110",
                    "2111",
                    "2112",
                    "2113",
                    "2114",
                    "2115",
                    "2200",
                    "2201",
                    "2202",
                    "2203",
                    "2204",
                    "2205",
                    "2206",
                    "2207",
                    "2300",
                    "2500",
                    "2501",
                    "2502",
                    "2600",
                    "2601",
                    "2700",
                    "2701",
                    "2702",
                    "2703",
                    "2800",
                    "2801",
                    "2802",
                    "2803",
                    "2804",
                    "2805",
                    "2806",
                    "3000",
                    "3001",
                    "3002",
                    "3003",
                    "3004",
                    "3005",
                    "3006",
                    "3007",
                    "3008",
                    "3009",
                    "3010",
                    "3011",
                    "3012",
                    "3013",
                    "3014",
                    "3015",
                    "3016",
                    "3017",
                    "3018",
                    "3019",
                    "3020",
                    "3021",
                    "3022",
                    "3023",
                    "3024",
                    "3025"
                ],
                "type": "integer",
                "format": "int32",
                "x-enum-values": [
                    {
                        "numericValue": "0",
                        "identifier": "None"
                    },
                    {
                        "numericValue": "1",
                        "identifier": "Success"
                    },
                    {
                        "numericValue": "2",
                        "identifier": "TransportException"
                    },
                    {
                        "numericValue": "3",
                        "identifier": "UnhandledException"
                    },
                    {
                        "numericValue": "4",
                        "identifier": "NotImplemented"
                    },
                    {
                        "numericValue": "5",
                        "identifier": "SystemDisabled"
                    },
                    {
                        "numericValue": "6",
                        "identifier": "FailedToLoadAvailableLocalesConfiguration"
                    },
                    {
                        "numericValue": "7",
                        "identifier": "ParameterParseFailure"
                    },
                    {
                        "numericValue": "8",
                        "identifier": "ParameterInvalidRange"
                    },
                    {
                        "numericValue": "9",
                        "identifier": "BadRequest"
                    },
                    {
                        "numericValue": "10",
                        "identifier": "AuthenticationInvalid"
                    },
                    {
                        "numericValue": "11",
                        "identifier": "DataNotFound"
                    },
                    {
                        "numericValue": "12",
                        "identifier": "InsufficientPrivileges"
                    },
                    {
                        "numericValue": "13",
                        "identifier": "Duplicate"
                    },
                    {
                        "numericValue": "14",
                        "identifier": "UnknownSqlResult",
                        "description": "Deprecated, please do not check for this value anywhere."
                    },
                    {
                        "numericValue": "15",
                        "identifier": "ValidationError"
                    },
                    {
                        "numericValue": "16",
                        "identifier": "ValidationMissingFieldError"
                    },
                    {
                        "numericValue": "17",
                        "identifier": "ValidationInvalidInputError"
                    },
                    {
                        "numericValue": "18",
                        "identifier": "InvalidParameters"
                    },
                    {
                        "numericValue": "19",
                        "identifier": "ParameterNotFound"
                    },
                    {
                        "numericValue": "20",
                        "identifier": "UnhandledHttpException"
                    },
                    {
                        "numericValue": "21",
                        "identifier": "NotFound"
                    },
                    {
                        "numericValue": "22",
                        "identifier": "WebAuthModuleAsyncFailed"
                    },
                    {
                        "numericValue": "23",
                        "identifier": "InvalidReturnValue"
                    },
                    {
                        "numericValue": "24",
                        "identifier": "UserBanned"
                    },
                    {
                        "numericValue": "25",
                        "identifier": "InvalidPostBody"
                    },
                    {
                        "numericValue": "26",
                        "identifier": "MissingPostBody"
                    },
                    {
                        "numericValue": "27",
                        "identifier": "ExternalServiceTimeout"
                    },
                    {
                        "numericValue": "28",
                        "identifier": "ValidationLengthError"
                    },
                    {
                        "numericValue": "29",
                        "identifier": "ValidationRangeError"
                    },
                    {
                        "numericValue": "30",
                        "identifier": "JsonDeserializationError"
                    },
                    {
                        "numericValue": "31",
                        "identifier": "ThrottleLimitExceeded"
                    },
                    {
                        "numericValue": "32",
                        "identifier": "ValidationTagError"
                    },
                    {
                        "numericValue": "33",
                        "identifier": "ValidationProfanityError"
                    },
                    {
                        "numericValue": "34",
                        "identifier": "ValidationUrlFormatError"
                    },
                    {
                        "numericValue": "35",
                        "identifier": "ThrottleLimitExceededMinutes"
                    },
                    {
                        "numericValue": "36",
                        "identifier": "ThrottleLimitExceededMomentarily"
                    },
                    {
                        "numericValue": "37",
                        "identifier": "ThrottleLimitExceededSeconds"
                    },
                    {
                        "numericValue": "38",
                        "identifier": "ExternalServiceUnknown"
                    },
                    {
                        "numericValue": "39",
                        "identifier": "ValidationWordLengthError"
                    },
                    {
                        "numericValue": "40",
                        "identifier": "ValidationInvisibleUnicode"
                    },
                    {
                        "numericValue": "41",
                        "identifier": "ValidationBadNames"
                    },
                    {
                        "numericValue": "42",
                        "identifier": "ExternalServiceFailed"
                    },
                    {
                        "numericValue": "43",
                        "identifier": "ServiceRetired"
                    },
                    {
                        "numericValue": "44",
                        "identifier": "UnknownSqlException"
                    },
                    {
                        "numericValue": "45",
                        "identifier": "UnsupportedLocale"
                    },
                    {
                        "numericValue": "46",
                        "identifier": "InvalidPageNumber"
                    },
                    {
                        "numericValue": "47",
                        "identifier": "MaximumPageSizeExceeded"
                    },
                    {
                        "numericValue": "48",
                        "identifier": "ServiceUnsupported"
                    },
                    {
                        "numericValue": "49",
                        "identifier": "ValidationMaximumUnicodeCombiningCharacters"
                    },
                    {
                        "numericValue": "50",
                        "identifier": "ValidationMaximumSequentialCarriageReturns"
                    },
                    {
                        "numericValue": "51",
                        "identifier": "PerEndpointRequestThrottleExceeded"
                    },
                    {
                        "numericValue": "52",
                        "identifier": "AuthContextCacheAssertion"
                    },
                    {
                        "numericValue": "53",
                        "identifier": "ExPlatformStringValidationError"
                    },
                    {
                        "numericValue": "89",
                        "identifier": "ObsoleteCredentialType"
                    },
                    {
                        "numericValue": "90",
                        "identifier": "UnableToUnPairMobileApp"
                    },
                    {
                        "numericValue": "91",
                        "identifier": "UnableToPairMobileApp"
                    },
                    {
                        "numericValue": "92",
                        "identifier": "CannotUseMobileAuthWithNonMobileProvider"
                    },
                    {
                        "numericValue": "93",
                        "identifier": "MissingDeviceCookie"
                    },
                    {
                        "numericValue": "94",
                        "identifier": "FacebookTokenExpired"
                    },
                    {
                        "numericValue": "95",
                        "identifier": "AuthTicketRequired"
                    },
                    {
                        "numericValue": "96",
                        "identifier": "CookieContextRequired"
                    },
                    {
                        "numericValue": "97",
                        "identifier": "UnknownAuthenticationError"
                    },
                    {
                        "numericValue": "98",
                        "identifier": "BungieNetAccountCreationRequired"
                    },
                    {
                        "numericValue": "99",
                        "identifier": "WebAuthRequired"
                    },
                    {
                        "numericValue": "100",
                        "identifier": "ContentUnknownSqlResult"
                    },
                    {
                        "numericValue": "101",
                        "identifier": "ContentNeedUniquePath"
                    },
                    {
                        "numericValue": "102",
                        "identifier": "ContentSqlException"
                    },
                    {
                        "numericValue": "103",
                        "identifier": "ContentNotFound"
                    },
                    {
                        "numericValue": "104",
                        "identifier": "ContentSuccessWithTagAddFail"
                    },
                    {
                        "numericValue": "105",
                        "identifier": "ContentSearchMissingParameters"
                    },
                    {
                        "numericValue": "106",
                        "identifier": "ContentInvalidId"
                    },
                    {
                        "numericValue": "107",
                        "identifier": "ContentPhysicalFileDeletionError"
                    },
                    {
                        "numericValue": "108",
                        "identifier": "ContentPhysicalFileCreationError"
                    },
                    {
                        "numericValue": "109",
                        "identifier": "ContentPerforceSubmissionError"
                    },
                    {
                        "numericValue": "110",
                        "identifier": "ContentPerforceInitializationError"
                    },
                    {
                        "numericValue": "111",
                        "identifier": "ContentDeploymentPackageNotReadyError"
                    },
                    {
                        "numericValue": "112",
                        "identifier": "ContentUploadFailed"
                    },
                    {
                        "numericValue": "113",
                        "identifier": "ContentTooManyResults"
                    },
                    {
                        "numericValue": "115",
                        "identifier": "ContentInvalidState"
                    },
                    {
                        "numericValue": "116",
                        "identifier": "ContentNavigationParentNotFound"
                    },
                    {
                        "numericValue": "117",
                        "identifier": "ContentNavigationParentUpdateError"
                    },
                    {
                        "numericValue": "118",
                        "identifier": "DeploymentPackageNotEditable"
                    },
                    {
                        "numericValue": "119",
                        "identifier": "ContentValidationError"
                    },
                    {
                        "numericValue": "120",
                        "identifier": "ContentPropertiesValidationError"
                    },
                    {
                        "numericValue": "121",
                        "identifier": "ContentTypeNotFound"
                    },
                    {
                        "numericValue": "122",
                        "identifier": "DeploymentPackageNotFound"
                    },
                    {
                        "numericValue": "123",
                        "identifier": "ContentSearchInvalidParameters"
                    },
                    {
                        "numericValue": "124",
                        "identifier": "ContentItemPropertyAggregationError"
                    },
                    {
                        "numericValue": "125",
                        "identifier": "DeploymentPackageFileNotFound"
                    },
                    {
                        "numericValue": "126",
                        "identifier": "ContentPerforceFileHistoryNotFound"
                    },
                    {
                        "numericValue": "127",
                        "identifier": "ContentAssetZipCreationFailure"
                    },
                    {
                        "numericValue": "128",
                        "identifier": "ContentAssetZipCreationBusy"
                    },
                    {
                        "numericValue": "129",
                        "identifier": "ContentProjectNotFound"
                    },
                    {
                        "numericValue": "130",
                        "identifier": "ContentFolderNotFound"
                    },
                    {
                        "numericValue": "131",
                        "identifier": "ContentPackagesInconsistent"
                    },
                    {
                        "numericValue": "132",
                        "identifier": "ContentPackagesInvalidState"
                    },
                    {
                        "numericValue": "133",
                        "identifier": "ContentPackagesInconsistentType"
                    },
                    {
                        "numericValue": "134",
                        "identifier": "ContentCannotDeletePackage"
                    },
                    {
                        "numericValue": "135",
                        "identifier": "ContentLockedForChanges"
                    },
                    {
                        "numericValue": "136",
                        "identifier": "ContentFileUploadFailed"
                    },
                    {
                        "numericValue": "137",
                        "identifier": "ContentNotReviewed"
                    },
                    {
                        "numericValue": "138",
                        "identifier": "ContentPermissionDenied"
                    },
                    {
                        "numericValue": "139",
                        "identifier": "ContentInvalidExternalUrl"
                    },
                    {
                        "numericValue": "140",
                        "identifier": "ContentExternalFileCannotBeImportedLocally"
                    },
                    {
                        "numericValue": "141",
                        "identifier": "ContentTagSaveFailure"
                    },
                    {
                        "numericValue": "142",
                        "identifier": "ContentPerforceUnmatchedFileError"
                    },
                    {
                        "numericValue": "143",
                        "identifier": "ContentPerforceChangelistResultNotFound"
                    },
                    {
                        "numericValue": "144",
                        "identifier": "ContentPerforceChangelistFileItemsNotFound"
                    },
                    {
                        "numericValue": "145",
                        "identifier": "ContentPerforceInvalidRevisionError"
                    },
                    {
                        "numericValue": "146",
                        "identifier": "ContentUnloadedSaveResult"
                    },
                    {
                        "numericValue": "147",
                        "identifier": "ContentPropertyInvalidNumber"
                    },
                    {
                        "numericValue": "148",
                        "identifier": "ContentPropertyInvalidUrl"
                    },
                    {
                        "numericValue": "149",
                        "identifier": "ContentPropertyInvalidDate"
                    },
                    {
                        "numericValue": "150",
                        "identifier": "ContentPropertyInvalidSet"
                    },
                    {
                        "numericValue": "151",
                        "identifier": "ContentPropertyCannotDeserialize"
                    },
                    {
                        "numericValue": "152",
                        "identifier": "ContentRegexValidationFailOnProperty"
                    },
                    {
                        "numericValue": "153",
                        "identifier": "ContentMaxLengthFailOnProperty"
                    },
                    {
                        "numericValue": "154",
                        "identifier": "ContentPropertyUnexpectedDeserializationError"
                    },
                    {
                        "numericValue": "155",
                        "identifier": "ContentPropertyRequired"
                    },
                    {
                        "numericValue": "156",
                        "identifier": "ContentCannotCreateFile"
                    },
                    {
                        "numericValue": "157",
                        "identifier": "ContentInvalidMigrationFile"
                    },
                    {
                        "numericValue": "158",
                        "identifier": "ContentMigrationAlteringProcessedItem"
                    },
                    {
                        "numericValue": "159",
                        "identifier": "ContentPropertyDefinitionNotFound"
                    },
                    {
                        "numericValue": "160",
                        "identifier": "ContentReviewDataChanged"
                    },
                    {
                        "numericValue": "161",
                        "identifier": "ContentRollbackRevisionNotInPackage"
                    },
                    {
                        "numericValue": "162",
                        "identifier": "ContentItemNotBasedOnLatestRevision"
                    },
                    {
                        "numericValue": "163",
                        "identifier": "ContentUnauthorized"
                    },
                    {
                        "numericValue": "164",
                        "identifier": "ContentCannotCreateDeploymentPackage"
                    },
                    {
                        "numericValue": "165",
                        "identifier": "ContentUserNotFound"
                    },
                    {
                        "numericValue": "166",
                        "identifier": "ContentLocalePermissionDenied"
                    },
                    {
                        "numericValue": "167",
                        "identifier": "ContentInvalidLinkToInternalEnvironment"
                    },
                    {
                        "numericValue": "168",
                        "identifier": "ContentInvalidBlacklistedContent"
                    },
                    {
                        "numericValue": "169",
                        "identifier": "ContentMacroMalformedNoContentId"
                    },
                    {
                        "numericValue": "170",
                        "identifier": "ContentMacroMalformedNoTemplateType"
                    },
                    {
                        "numericValue": "171",
                        "identifier": "ContentIllegalBNetMembershipId"
                    },
                    {
                        "numericValue": "172",
                        "identifier": "ContentLocaleDidNotMatchExpected"
                    },
                    {
                        "numericValue": "173",
                        "identifier": "ContentBabelCallFailed"
                    },
                    {
                        "numericValue": "174",
                        "identifier": "ContentEnglishPostLiveForbidden"
                    },
                    {
                        "numericValue": "175",
                        "identifier": "ContentLocaleEditPermissionDenied"
                    },
                    {
                        "numericValue": "200",
                        "identifier": "UserNonUniqueName"
                    },
                    {
                        "numericValue": "201",
                        "identifier": "UserManualLinkingStepRequired"
                    },
                    {
                        "numericValue": "202",
                        "identifier": "UserCreateUnknownSqlResult"
                    },
                    {
                        "numericValue": "203",
                        "identifier": "UserCreateUnknownSqlException"
                    },
                    {
                        "numericValue": "204",
                        "identifier": "UserMalformedMembershipId"
                    },
                    {
                        "numericValue": "205",
                        "identifier": "UserCannotFindRequestedUser"
                    },
                    {
                        "numericValue": "206",
                        "identifier": "UserCannotLoadAccountCredentialLinkInfo"
                    },
                    {
                        "numericValue": "207",
                        "identifier": "UserInvalidMobileAppType"
                    },
                    {
                        "numericValue": "208",
                        "identifier": "UserMissingMobilePairingInfo"
                    },
                    {
                        "numericValue": "209",
                        "identifier": "UserCannotGenerateMobileKeyWhileUsingMobileCredential"
                    },
                    {
                        "numericValue": "210",
                        "identifier": "UserGenerateMobileKeyExistingSlotCollision"
                    },
                    {
                        "numericValue": "211",
                        "identifier": "UserDisplayNameMissingOrInvalid"
                    },
                    {
                        "numericValue": "212",
                        "identifier": "UserCannotLoadAccountProfileData"
                    },
                    {
                        "numericValue": "213",
                        "identifier": "UserCannotSaveUserProfileData"
                    },
                    {
                        "numericValue": "214",
                        "identifier": "UserEmailMissingOrInvalid"
                    },
                    {
                        "numericValue": "215",
                        "identifier": "UserTermsOfUseRequired"
                    },
                    {
                        "numericValue": "216",
                        "identifier": "UserCannotCreateNewAccountWhileLoggedIn"
                    },
                    {
                        "numericValue": "217",
                        "identifier": "UserCannotResolveCentralAccount"
                    },
                    {
                        "numericValue": "218",
                        "identifier": "UserInvalidAvatar"
                    },
                    {
                        "numericValue": "219",
                        "identifier": "UserMissingCreatedUserResult"
                    },
                    {
                        "numericValue": "220",
                        "identifier": "UserCannotChangeUniqueNameYet"
                    },
                    {
                        "numericValue": "221",
                        "identifier": "UserCannotChangeDisplayNameYet"
                    },
                    {
                        "numericValue": "222",
                        "identifier": "UserCannotChangeEmail"
                    },
                    {
                        "numericValue": "223",
                        "identifier": "UserUniqueNameMustStartWithLetter"
                    },
                    {
                        "numericValue": "224",
                        "identifier": "UserNoLinkedAccountsSupportFriendListings"
                    },
                    {
                        "numericValue": "225",
                        "identifier": "UserAcknowledgmentTableFull"
                    },
                    {
                        "numericValue": "226",
                        "identifier": "UserCreationDestinyMembershipRequired"
                    },
                    {
                        "numericValue": "227",
                        "identifier": "UserFriendsTokenNeedsRefresh"
                    },
                    {
                        "numericValue": "300",
                        "identifier": "MessagingUnknownError"
                    },
                    {
                        "numericValue": "301",
                        "identifier": "MessagingSelfError"
                    },
                    {
                        "numericValue": "302",
                        "identifier": "MessagingSendThrottle"
                    },
                    {
                        "numericValue": "303",
                        "identifier": "MessagingNoBody"
                    },
                    {
                        "numericValue": "304",
                        "identifier": "MessagingTooManyUsers"
                    },
                    {
                        "numericValue": "305",
                        "identifier": "MessagingCanNotLeaveConversation"
                    },
                    {
                        "numericValue": "306",
                        "identifier": "MessagingUnableToSend"
                    },
                    {
                        "numericValue": "307",
                        "identifier": "MessagingDeletedUserForbidden"
                    },
                    {
                        "numericValue": "308",
                        "identifier": "MessagingCannotDeleteExternalConversation"
                    },
                    {
                        "numericValue": "309",
                        "identifier": "MessagingGroupChatDisabled"
                    },
                    {
                        "numericValue": "310",
                        "identifier": "MessagingMustIncludeSelfInPrivateMessage"
                    },
                    {
                        "numericValue": "311",
                        "identifier": "MessagingSenderIsBanned"
                    },
                    {
                        "numericValue": "312",
                        "identifier": "MessagingGroupOptionalChatExceededMaximum"
                    },
                    {
                        "numericValue": "313",
                        "identifier": "PrivateMessagingRequiresDestinyMembership"
                    },
                    {
                        "numericValue": "400",
                        "identifier": "AddSurveyAnswersUnknownSqlException"
                    },
                    {
                        "numericValue": "500",
                        "identifier": "ForumBodyCannotBeEmpty"
                    },
                    {
                        "numericValue": "501",
                        "identifier": "ForumSubjectCannotBeEmptyOnTopicPost"
                    },
                    {
                        "numericValue": "502",
                        "identifier": "ForumCannotLocateParentPost"
                    },
                    {
                        "numericValue": "503",
                        "identifier": "ForumThreadLockedForReplies"
                    },
                    {
                        "numericValue": "504",
                        "identifier": "ForumUnknownSqlResultDuringCreatePost"
                    },
                    {
                        "numericValue": "505",
                        "identifier": "ForumUnknownTagCreationError"
                    },
                    {
                        "numericValue": "506",
                        "identifier": "ForumUnknownSqlResultDuringTagItem"
                    },
                    {
                        "numericValue": "507",
                        "identifier": "ForumUnknownExceptionCreatePost"
                    },
                    {
                        "numericValue": "508",
                        "identifier": "ForumQuestionMustBeTopicPost"
                    },
                    {
                        "numericValue": "509",
                        "identifier": "ForumExceptionDuringTagSearch"
                    },
                    {
                        "numericValue": "510",
                        "identifier": "ForumExceptionDuringTopicRetrieval"
                    },
                    {
                        "numericValue": "511",
                        "identifier": "ForumAliasedTagError"
                    },
                    {
                        "numericValue": "512",
                        "identifier": "ForumCannotLocateThread"
                    },
                    {
                        "numericValue": "513",
                        "identifier": "ForumUnknownExceptionEditPost"
                    },
                    {
                        "numericValue": "514",
                        "identifier": "ForumCannotLocatePost"
                    },
                    {
                        "numericValue": "515",
                        "identifier": "ForumUnknownExceptionGetOrCreateTags"
                    },
                    {
                        "numericValue": "516",
                        "identifier": "ForumEditPermissionDenied"
                    },
                    {
                        "numericValue": "517",
                        "identifier": "ForumUnknownSqlResultDuringTagIdRetrieval"
                    },
                    {
                        "numericValue": "518",
                        "identifier": "ForumCannotGetRating"
                    },
                    {
                        "numericValue": "519",
                        "identifier": "ForumUnknownExceptionGetRating"
                    },
                    {
                        "numericValue": "520",
                        "identifier": "ForumRatingsAccessError"
                    },
                    {
                        "numericValue": "521",
                        "identifier": "ForumRelatedPostAccessError"
                    },
                    {
                        "numericValue": "522",
                        "identifier": "ForumLatestReplyAccessError"
                    },
                    {
                        "numericValue": "523",
                        "identifier": "ForumUserStatusAccessError"
                    },
                    {
                        "numericValue": "524",
                        "identifier": "ForumAuthorAccessError"
                    },
                    {
                        "numericValue": "525",
                        "identifier": "ForumGroupAccessError"
                    },
                    {
                        "numericValue": "526",
                        "identifier": "ForumUrlExpectedButMissing"
                    },
                    {
                        "numericValue": "527",
                        "identifier": "ForumRepliesCannotBeEmpty"
                    },
                    {
                        "numericValue": "528",
                        "identifier": "ForumRepliesCannotBeInDifferentGroups"
                    },
                    {
                        "numericValue": "529",
                        "identifier": "ForumSubTopicCannotBeCreatedAtThisThreadLevel"
                    },
                    {
                        "numericValue": "530",
                        "identifier": "ForumCannotCreateContentTopic"
                    },
                    {
                        "numericValue": "531",
                        "identifier": "ForumTopicDoesNotExist"
                    },
                    {
                        "numericValue": "532",
                        "identifier": "ForumContentCommentsNotAllowed"
                    },
                    {
                        "numericValue": "533",
                        "identifier": "ForumUnknownSqlResultDuringEditPost"
                    },
                    {
                        "numericValue": "534",
                        "identifier": "ForumUnknownSqlResultDuringGetPost"
                    },
                    {
                        "numericValue": "535",
                        "identifier": "ForumPostValidationBadUrl"
                    },
                    {
                        "numericValue": "536",
                        "identifier": "ForumBodyTooLong"
                    },
                    {
                        "numericValue": "537",
                        "identifier": "ForumSubjectTooLong"
                    },
                    {
                        "numericValue": "538",
                        "identifier": "ForumAnnouncementNotAllowed"
                    },
                    {
                        "numericValue": "539",
                        "identifier": "ForumCannotShareOwnPost"
                    },
                    {
                        "numericValue": "540",
                        "identifier": "ForumEditNoOp"
                    },
                    {
                        "numericValue": "541",
                        "identifier": "ForumUnknownDatabaseErrorDuringGetPost"
                    },
                    {
                        "numericValue": "542",
                        "identifier": "ForumExceeedMaximumRowLimit"
                    },
                    {
                        "numericValue": "543",
                        "identifier": "ForumCannotSharePrivatePost"
                    },
                    {
                        "numericValue": "544",
                        "identifier": "ForumCannotCrossPostBetweenGroups"
                    },
                    {
                        "numericValue": "555",
                        "identifier": "ForumIncompatibleCategories"
                    },
                    {
                        "numericValue": "556",
                        "identifier": "ForumCannotUseTheseCategoriesOnNonTopicPost"
                    },
                    {
                        "numericValue": "557",
                        "identifier": "ForumCanOnlyDeleteTopics"
                    },
                    {
                        "numericValue": "558",
                        "identifier": "ForumDeleteSqlException"
                    },
                    {
                        "numericValue": "559",
                        "identifier": "ForumDeleteSqlUnknownResult"
                    },
                    {
                        "numericValue": "560",
                        "identifier": "ForumTooManyTags"
                    },
                    {
                        "numericValue": "561",
                        "identifier": "ForumCanOnlyRateTopics"
                    },
                    {
                        "numericValue": "562",
                        "identifier": "ForumBannedPostsCannotBeEdited"
                    },
                    {
                        "numericValue": "563",
                        "identifier": "ForumThreadRootIsBanned"
                    },
                    {
                        "numericValue": "564",
                        "identifier": "ForumCannotUseOfficialTagCategoryAsTag"
                    },
                    {
                        "numericValue": "565",
                        "identifier": "ForumAnswerCannotBeMadeOnCreatePost"
                    },
                    {
                        "numericValue": "566",
                        "identifier": "ForumAnswerCannotBeMadeOnEditPost"
                    },
                    {
                        "numericValue": "567",
                        "identifier": "ForumAnswerPostIdIsNotADirectReplyOfQuestion"
                    },
                    {
                        "numericValue": "568",
                        "identifier": "ForumAnswerTopicIdIsNotAQuestion"
                    },
                    {
                        "numericValue": "569",
                        "identifier": "ForumUnknownExceptionDuringMarkAnswer"
                    },
                    {
                        "numericValue": "570",
                        "identifier": "ForumUnknownSqlResultDuringMarkAnswer"
                    },
                    {
                        "numericValue": "571",
                        "identifier": "ForumCannotRateYourOwnPosts"
                    },
                    {
                        "numericValue": "572",
                        "identifier": "ForumPollsMustBeTheFirstPostInTopic"
                    },
                    {
                        "numericValue": "573",
                        "identifier": "ForumInvalidPollInput"
                    },
                    {
                        "numericValue": "574",
                        "identifier": "ForumGroupAdminEditNonMember"
                    },
                    {
                        "numericValue": "575",
                        "identifier": "ForumCannotEditModeratorEditedPost"
                    },
                    {
                        "numericValue": "576",
                        "identifier": "ForumRequiresDestinyMembership"
                    },
                    {
                        "numericValue": "577",
                        "identifier": "ForumUnexpectedError"
                    },
                    {
                        "numericValue": "578",
                        "identifier": "ForumAgeLock"
                    },
                    {
                        "numericValue": "579",
                        "identifier": "ForumMaxPages"
                    },
                    {
                        "numericValue": "580",
                        "identifier": "ForumMaxPagesOldestFirst"
                    },
                    {
                        "numericValue": "581",
                        "identifier": "ForumCannotApplyForumIdWithoutTags"
                    },
                    {
                        "numericValue": "582",
                        "identifier": "ForumCannotApplyForumIdToNonTopics"
                    },
                    {
                        "numericValue": "583",
                        "identifier": "ForumCannotDownvoteCommunityCreations"
                    },
                    {
                        "numericValue": "584",
                        "identifier": "ForumTopicsMustHaveOfficialCategory"
                    },
                    {
                        "numericValue": "585",
                        "identifier": "ForumRecruitmentTopicMalformed"
                    },
                    {
                        "numericValue": "586",
                        "identifier": "ForumRecruitmentTopicNotFound"
                    },
                    {
                        "numericValue": "587",
                        "identifier": "ForumRecruitmentTopicNoSlotsRemaining"
                    },
                    {
                        "numericValue": "588",
                        "identifier": "ForumRecruitmentTopicKickBan"
                    },
                    {
                        "numericValue": "589",
                        "identifier": "ForumRecruitmentTopicRequirementsNotMet"
                    },
                    {
                        "numericValue": "590",
                        "identifier": "ForumRecruitmentTopicNoPlayers"
                    },
                    {
                        "numericValue": "591",
                        "identifier": "ForumRecruitmentApproveFailMessageBan"
                    },
                    {
                        "numericValue": "592",
                        "identifier": "ForumRecruitmentGlobalBan"
                    },
                    {
                        "numericValue": "593",
                        "identifier": "ForumUserBannedFromThisTopic"
                    },
                    {
                        "numericValue": "594",
                        "identifier": "ForumRecruitmentFireteamMembersOnly"
                    },
                    {
                        "numericValue": "595",
                        "identifier": "ForumRequiresDestiny2Progress"
                    },
                    {
                        "numericValue": "601",
                        "identifier": "GroupMembershipApplicationAlreadyResolved"
                    },
                    {
                        "numericValue": "602",
                        "identifier": "GroupMembershipAlreadyApplied"
                    },
                    {
                        "numericValue": "603",
                        "identifier": "GroupMembershipInsufficientPrivileges"
                    },
                    {
                        "numericValue": "604",
                        "identifier": "GroupIdNotReturnedFromCreation"
                    },
                    {
                        "numericValue": "605",
                        "identifier": "GroupSearchInvalidParameters"
                    },
                    {
                        "numericValue": "606",
                        "identifier": "GroupMembershipPendingApplicationNotFound"
                    },
                    {
                        "numericValue": "607",
                        "identifier": "GroupInvalidId"
                    },
                    {
                        "numericValue": "608",
                        "identifier": "GroupInvalidMembershipId"
                    },
                    {
                        "numericValue": "609",
                        "identifier": "GroupInvalidMembershipType"
                    },
                    {
                        "numericValue": "610",
                        "identifier": "GroupMissingTags"
                    },
                    {
                        "numericValue": "611",
                        "identifier": "GroupMembershipNotFound"
                    },
                    {
                        "numericValue": "612",
                        "identifier": "GroupInvalidRating"
                    },
                    {
                        "numericValue": "613",
                        "identifier": "GroupUserFollowingAccessError"
                    },
                    {
                        "numericValue": "614",
                        "identifier": "GroupUserMembershipAccessError"
                    },
                    {
                        "numericValue": "615",
                        "identifier": "GroupCreatorAccessError"
                    },
                    {
                        "numericValue": "616",
                        "identifier": "GroupAdminAccessError"
                    },
                    {
                        "numericValue": "617",
                        "identifier": "GroupPrivatePostNotViewable"
                    },
                    {
                        "numericValue": "618",
                        "identifier": "GroupMembershipNotLoggedIn"
                    },
                    {
                        "numericValue": "619",
                        "identifier": "GroupNotDeleted"
                    },
                    {
                        "numericValue": "620",
                        "identifier": "GroupUnknownErrorUndeletingGroup"
                    },
                    {
                        "numericValue": "621",
                        "identifier": "GroupDeleted"
                    },
                    {
                        "numericValue": "622",
                        "identifier": "GroupNotFound"
                    },
                    {
                        "numericValue": "623",
                        "identifier": "GroupMemberBanned"
                    },
                    {
                        "numericValue": "624",
                        "identifier": "GroupMembershipClosed"
                    },
                    {
                        "numericValue": "625",
                        "identifier": "GroupPrivatePostOverrideError"
                    },
                    {
                        "numericValue": "626",
                        "identifier": "GroupNameTaken"
                    },
                    {
                        "numericValue": "627",
                        "identifier": "GroupDeletionGracePeriodExpired"
                    },
                    {
                        "numericValue": "628",
                        "identifier": "GroupCannotCheckBanStatus"
                    },
                    {
                        "numericValue": "629",
                        "identifier": "GroupMaximumMembershipCountReached"
                    },
                    {
                        "numericValue": "630",
                        "identifier": "NoDestinyAccountForClanPlatform"
                    },
                    {
                        "numericValue": "631",
                        "identifier": "AlreadyRequestingMembershipForClanPlatform"
                    },
                    {
                        "numericValue": "632",
                        "identifier": "AlreadyClanMemberOnPlatform"
                    },
                    {
                        "numericValue": "633",
                        "identifier": "GroupJoinedCannotSetClanName"
                    },
                    {
                        "numericValue": "634",
                        "identifier": "GroupLeftCannotClearClanName"
                    },
                    {
                        "numericValue": "635",
                        "identifier": "GroupRelationshipRequestPending"
                    },
                    {
                        "numericValue": "636",
                        "identifier": "GroupRelationshipRequestBlocked"
                    },
                    {
                        "numericValue": "637",
                        "identifier": "GroupRelationshipRequestNotFound"
                    },
                    {
                        "numericValue": "638",
                        "identifier": "GroupRelationshipBlockNotFound"
                    },
                    {
                        "numericValue": "639",
                        "identifier": "GroupRelationshipNotFound"
                    },
                    {
                        "numericValue": "641",
                        "identifier": "GroupAlreadyAllied"
                    },
                    {
                        "numericValue": "642",
                        "identifier": "GroupAlreadyMember"
                    },
                    {
                        "numericValue": "643",
                        "identifier": "GroupRelationshipAlreadyExists"
                    },
                    {
                        "numericValue": "644",
                        "identifier": "InvalidGroupTypesForRelationshipRequest"
                    },
                    {
                        "numericValue": "646",
                        "identifier": "GroupAtMaximumAlliances"
                    },
                    {
                        "numericValue": "647",
                        "identifier": "GroupCannotSetClanOnlySettings"
                    },
                    {
                        "numericValue": "648",
                        "identifier": "ClanCannotSetTwoDefaultPostTypes"
                    },
                    {
                        "numericValue": "649",
                        "identifier": "GroupMemberInvalidMemberType"
                    },
                    {
                        "numericValue": "650",
                        "identifier": "GroupInvalidPlatformType"
                    },
                    {
                        "numericValue": "651",
                        "identifier": "GroupMemberInvalidSort"
                    },
                    {
                        "numericValue": "652",
                        "identifier": "GroupInvalidResolveState"
                    },
                    {
                        "numericValue": "653",
                        "identifier": "ClanAlreadyEnabledForPlatform"
                    },
                    {
                        "numericValue": "654",
                        "identifier": "ClanNotEnabledForPlatform"
                    },
                    {
                        "numericValue": "655",
                        "identifier": "ClanEnabledButCouldNotJoinNoAccount"
                    },
                    {
                        "numericValue": "656",
                        "identifier": "ClanEnabledButCouldNotJoinAlreadyMember"
                    },
                    {
                        "numericValue": "657",
                        "identifier": "ClanCannotJoinNoCredential"
                    },
                    {
                        "numericValue": "658",
                        "identifier": "NoClanMembershipForPlatform"
                    },
                    {
                        "numericValue": "659",
                        "identifier": "GroupToGroupFollowLimitReached"
                    },
                    {
                        "numericValue": "660",
                        "identifier": "ChildGroupAlreadyInAlliance"
                    },
                    {
                        "numericValue": "661",
                        "identifier": "OwnerGroupAlreadyInAlliance"
                    },
                    {
                        "numericValue": "662",
                        "identifier": "AllianceOwnerCannotJoinAlliance"
                    },
                    {
                        "numericValue": "663",
                        "identifier": "GroupNotInAlliance"
                    },
                    {
                        "numericValue": "664",
                        "identifier": "ChildGroupCannotInviteToAlliance"
                    },
                    {
                        "numericValue": "665",
                        "identifier": "GroupToGroupAlreadyFollowed"
                    },
                    {
                        "numericValue": "666",
                        "identifier": "GroupToGroupNotFollowing"
                    },
                    {
                        "numericValue": "667",
                        "identifier": "ClanMaximumMembershipReached"
                    },
                    {
                        "numericValue": "668",
                        "identifier": "ClanNameNotValid"
                    },
                    {
                        "numericValue": "669",
                        "identifier": "ClanNameNotValidError"
                    },
                    {
                        "numericValue": "670",
                        "identifier": "AllianceOwnerNotDefined"
                    },
                    {
                        "numericValue": "671",
                        "identifier": "AllianceChildNotDefined"
                    },
                    {
                        "numericValue": "672",
                        "identifier": "ClanCultureIllegalCharacters"
                    },
                    {
                        "numericValue": "673",
                        "identifier": "ClanTagIllegalCharacters"
                    },
                    {
                        "numericValue": "674",
                        "identifier": "ClanRequiresInvitation"
                    },
                    {
                        "numericValue": "675",
                        "identifier": "ClanMembershipClosed"
                    },
                    {
                        "numericValue": "676",
                        "identifier": "ClanInviteAlreadyMember"
                    },
                    {
                        "numericValue": "677",
                        "identifier": "GroupInviteAlreadyMember"
                    },
                    {
                        "numericValue": "678",
                        "identifier": "GroupJoinApprovalRequired"
                    },
                    {
                        "numericValue": "679",
                        "identifier": "ClanTagRequired"
                    },
                    {
                        "numericValue": "680",
                        "identifier": "GroupNameCannotStartOrEndWithWhiteSpace"
                    },
                    {
                        "numericValue": "681",
                        "identifier": "ClanCallsignCannotStartOrEndWithWhiteSpace"
                    },
                    {
                        "numericValue": "682",
                        "identifier": "ClanMigrationFailed"
                    },
                    {
                        "numericValue": "683",
                        "identifier": "ClanNotEnabledAlreadyMemberOfAnotherClan"
                    },
                    {
                        "numericValue": "684",
                        "identifier": "GroupModerationNotPermittedOnNonMembers"
                    },
                    {
                        "numericValue": "685",
                        "identifier": "ClanCreationInWorldServerFailed"
                    },
                    {
                        "numericValue": "686",
                        "identifier": "ClanNotFound"
                    },
                    {
                        "numericValue": "687",
                        "identifier": "ClanMembershipLevelDoesNotPermitThatAction"
                    },
                    {
                        "numericValue": "688",
                        "identifier": "ClanMemberNotFound"
                    },
                    {
                        "numericValue": "689",
                        "identifier": "ClanMissingMembershipApprovers"
                    },
                    {
                        "numericValue": "690",
                        "identifier": "ClanInWrongStateForRequestedAction"
                    },
                    {
                        "numericValue": "691",
                        "identifier": "ClanNameAlreadyUsed"
                    },
                    {
                        "numericValue": "692",
                        "identifier": "ClanTooFewMembers"
                    },
                    {
                        "numericValue": "693",
                        "identifier": "ClanInfoCannotBeWhitespace"
                    },
                    {
                        "numericValue": "694",
                        "identifier": "GroupCultureThrottle"
                    },
                    {
                        "numericValue": "695",
                        "identifier": "ClanTargetDisallowsInvites"
                    },
                    {
                        "numericValue": "696",
                        "identifier": "ClanInvalidOperation"
                    },
                    {
                        "numericValue": "697",
                        "identifier": "ClanFounderCannotLeaveWithoutAbdication"
                    },
                    {
                        "numericValue": "698",
                        "identifier": "ClanNameReserved"
                    },
                    {
                        "numericValue": "699",
                        "identifier": "ClanApplicantInClanSoNowInvited"
                    },
                    {
                        "numericValue": "701",
                        "identifier": "ActivitiesUnknownException"
                    },
                    {
                        "numericValue": "702",
                        "identifier": "ActivitiesParameterNull"
                    },
                    {
                        "numericValue": "703",
                        "identifier": "ActivityCountsDiabled"
                    },
                    {
                        "numericValue": "704",
                        "identifier": "ActivitySearchInvalidParameters"
                    },
                    {
                        "numericValue": "705",
                        "identifier": "ActivityPermissionDenied"
                    },
                    {
                        "numericValue": "706",
                        "identifier": "ShareAlreadyShared"
                    },
                    {
                        "numericValue": "707",
                        "identifier": "ActivityLoggingDisabled"
                    },
                    {
                        "numericValue": "750",
                        "identifier": "ClanRequiresExistingDestinyAccount"
                    },
                    {
                        "numericValue": "801",
                        "identifier": "ItemAlreadyFollowed"
                    },
                    {
                        "numericValue": "802",
                        "identifier": "ItemNotFollowed"
                    },
                    {
                        "numericValue": "803",
                        "identifier": "CannotFollowSelf"
                    },
                    {
                        "numericValue": "804",
                        "identifier": "GroupFollowLimitExceeded"
                    },
                    {
                        "numericValue": "805",
                        "identifier": "TagFollowLimitExceeded"
                    },
                    {
                        "numericValue": "806",
                        "identifier": "UserFollowLimitExceeded"
                    },
                    {
                        "numericValue": "807",
                        "identifier": "FollowUnsupportedEntityType"
                    },
                    {
                        "numericValue": "900",
                        "identifier": "NoValidTagsInList"
                    },
                    {
                        "numericValue": "901",
                        "identifier": "BelowMinimumSuggestionLength"
                    },
                    {
                        "numericValue": "902",
                        "identifier": "CannotGetSuggestionsOnMultipleTagsSimultaneously"
                    },
                    {
                        "numericValue": "903",
                        "identifier": "NotAValidPartialTag"
                    },
                    {
                        "numericValue": "904",
                        "identifier": "TagSuggestionsUnknownSqlResult"
                    },
                    {
                        "numericValue": "905",
                        "identifier": "TagsUnableToLoadPopularTagsFromDatabase"
                    },
                    {
                        "numericValue": "906",
                        "identifier": "TagInvalid"
                    },
                    {
                        "numericValue": "907",
                        "identifier": "TagNotFound"
                    },
                    {
                        "numericValue": "908",
                        "identifier": "SingleTagExpected"
                    },
                    {
                        "numericValue": "909",
                        "identifier": "TagsExceededMaximumPerItem"
                    },
                    {
                        "numericValue": "1000",
                        "identifier": "IgnoreInvalidParameters"
                    },
                    {
                        "numericValue": "1001",
                        "identifier": "IgnoreSqlException"
                    },
                    {
                        "numericValue": "1002",
                        "identifier": "IgnoreErrorRetrievingGroupPermissions"
                    },
                    {
                        "numericValue": "1003",
                        "identifier": "IgnoreErrorInsufficientPermission"
                    },
                    {
                        "numericValue": "1004",
                        "identifier": "IgnoreErrorRetrievingItem"
                    },
                    {
                        "numericValue": "1005",
                        "identifier": "IgnoreCannotIgnoreSelf"
                    },
                    {
                        "numericValue": "1006",
                        "identifier": "IgnoreIllegalType"
                    },
                    {
                        "numericValue": "1007",
                        "identifier": "IgnoreNotFound"
                    },
                    {
                        "numericValue": "1008",
                        "identifier": "IgnoreUserGloballyIgnored"
                    },
                    {
                        "numericValue": "1009",
                        "identifier": "IgnoreUserIgnored"
                    },
                    {
                        "numericValue": "1100",
                        "identifier": "NotificationSettingInvalid"
                    },
                    {
                        "numericValue": "1204",
                        "identifier": "PsnApiExpiredAccessToken"
                    },
                    {
                        "numericValue": "1205",
                        "identifier": "PSNExForbidden"
                    },
                    {
                        "numericValue": "1218",
                        "identifier": "PSNExSystemDisabled"
                    },
                    {
                        "numericValue": "1223",
                        "identifier": "PsnApiErrorCodeUnknown"
                    },
                    {
                        "numericValue": "1224",
                        "identifier": "PsnApiErrorWebException"
                    },
                    {
                        "numericValue": "1225",
                        "identifier": "PsnApiBadRequest"
                    },
                    {
                        "numericValue": "1226",
                        "identifier": "PsnApiAccessTokenRequired"
                    },
                    {
                        "numericValue": "1227",
                        "identifier": "PsnApiInvalidAccessToken"
                    },
                    {
                        "numericValue": "1229",
                        "identifier": "PsnApiBannedUser"
                    },
                    {
                        "numericValue": "1230",
                        "identifier": "PsnApiAccountUpgradeRequired"
                    },
                    {
                        "numericValue": "1231",
                        "identifier": "PsnApiServiceTemporarilyUnavailable"
                    },
                    {
                        "numericValue": "1232",
                        "identifier": "PsnApiServerBusy"
                    },
                    {
                        "numericValue": "1233",
                        "identifier": "PsnApiUnderMaintenance"
                    },
                    {
                        "numericValue": "1234",
                        "identifier": "PsnApiProfileUserNotFound"
                    },
                    {
                        "numericValue": "1235",
                        "identifier": "PsnApiProfilePrivacyRestriction"
                    },
                    {
                        "numericValue": "1236",
                        "identifier": "PsnApiProfileUnderMaintenance"
                    },
                    {
                        "numericValue": "1237",
                        "identifier": "PsnApiAccountAttributeMissing"
                    },
                    {
                        "numericValue": "1238",
                        "identifier": "PsnApiNoPermission"
                    },
                    {
                        "numericValue": "1239",
                        "identifier": "PsnApiTargetUserBlocked"
                    },
                    {
                        "numericValue": "1300",
                        "identifier": "XblExSystemDisabled"
                    },
                    {
                        "numericValue": "1301",
                        "identifier": "XblExUnknownError"
                    },
                    {
                        "numericValue": "1302",
                        "identifier": "XblApiErrorWebException"
                    },
                    {
                        "numericValue": "1303",
                        "identifier": "XblStsTokenInvalid"
                    },
                    {
                        "numericValue": "1304",
                        "identifier": "XblStsMissingToken"
                    },
                    {
                        "numericValue": "1305",
                        "identifier": "XblStsExpiredToken"
                    },
                    {
                        "numericValue": "1306",
                        "identifier": "XblAccessToTheSandboxDenied"
                    },
                    {
                        "numericValue": "1307",
                        "identifier": "XblMsaResponseMissing"
                    },
                    {
                        "numericValue": "1308",
                        "identifier": "XblMsaAccessTokenExpired"
                    },
                    {
                        "numericValue": "1309",
                        "identifier": "XblMsaInvalidRequest"
                    },
                    {
                        "numericValue": "1310",
                        "identifier": "XblMsaFriendsRequireSignIn"
                    },
                    {
                        "numericValue": "1311",
                        "identifier": "XblUserActionRequired"
                    },
                    {
                        "numericValue": "1312",
                        "identifier": "XblParentalControls"
                    },
                    {
                        "numericValue": "1313",
                        "identifier": "XblDeveloperAccount"
                    },
                    {
                        "numericValue": "1314",
                        "identifier": "XblUserTokenExpired"
                    },
                    {
                        "numericValue": "1315",
                        "identifier": "XblUserTokenInvalid"
                    },
                    {
                        "numericValue": "1316",
                        "identifier": "XblOffline"
                    },
                    {
                        "numericValue": "1317",
                        "identifier": "XblUnknownErrorCode"
                    },
                    {
                        "numericValue": "1318",
                        "identifier": "XblMsaInvalidGrant"
                    },
                    {
                        "numericValue": "1400",
                        "identifier": "ReportNotYetResolved"
                    },
                    {
                        "numericValue": "1401",
                        "identifier": "ReportOverturnDoesNotChangeDecision"
                    },
                    {
                        "numericValue": "1402",
                        "identifier": "ReportNotFound"
                    },
                    {
                        "numericValue": "1403",
                        "identifier": "ReportAlreadyReported"
                    },
                    {
                        "numericValue": "1404",
                        "identifier": "ReportInvalidResolution"
                    },
                    {
                        "numericValue": "1405",
                        "identifier": "ReportNotAssignedToYou"
                    },
                    {
                        "numericValue": "1500",
                        "identifier": "LegacyGameStatsSystemDisabled"
                    },
                    {
                        "numericValue": "1501",
                        "identifier": "LegacyGameStatsUnknownError"
                    },
                    {
                        "numericValue": "1502",
                        "identifier": "LegacyGameStatsMalformedSneakerNetCode"
                    },
                    {
                        "numericValue": "1600",
                        "identifier": "DestinyAccountAcquisitionFailure"
                    },
                    {
                        "numericValue": "1601",
                        "identifier": "DestinyAccountNotFound"
                    },
                    {
                        "numericValue": "1602",
                        "identifier": "DestinyBuildStatsDatabaseError"
                    },
                    {
                        "numericValue": "1603",
                        "identifier": "DestinyCharacterStatsDatabaseError"
                    },
                    {
                        "numericValue": "1604",
                        "identifier": "DestinyPvPStatsDatabaseError"
                    },
                    {
                        "numericValue": "1605",
                        "identifier": "DestinyPvEStatsDatabaseError"
                    },
                    {
                        "numericValue": "1606",
                        "identifier": "DestinyGrimoireStatsDatabaseError"
                    },
                    {
                        "numericValue": "1607",
                        "identifier": "DestinyStatsParameterMembershipTypeParseError"
                    },
                    {
                        "numericValue": "1608",
                        "identifier": "DestinyStatsParameterMembershipIdParseError"
                    },
                    {
                        "numericValue": "1609",
                        "identifier": "DestinyStatsParameterRangeParseError"
                    },
                    {
                        "numericValue": "1610",
                        "identifier": "DestinyStringItemHashNotFound"
                    },
                    {
                        "numericValue": "1611",
                        "identifier": "DestinyStringSetNotFound"
                    },
                    {
                        "numericValue": "1612",
                        "identifier": "DestinyContentLookupNotFoundForKey"
                    },
                    {
                        "numericValue": "1613",
                        "identifier": "DestinyContentItemNotFound"
                    },
                    {
                        "numericValue": "1614",
                        "identifier": "DestinyContentSectionNotFound"
                    },
                    {
                        "numericValue": "1615",
                        "identifier": "DestinyContentPropertyNotFound"
                    },
                    {
                        "numericValue": "1616",
                        "identifier": "DestinyContentConfigNotFound"
                    },
                    {
                        "numericValue": "1617",
                        "identifier": "DestinyContentPropertyBucketValueNotFound"
                    },
                    {
                        "numericValue": "1618",
                        "identifier": "DestinyUnexpectedError"
                    },
                    {
                        "numericValue": "1619",
                        "identifier": "DestinyInvalidAction"
                    },
                    {
                        "numericValue": "1620",
                        "identifier": "DestinyCharacterNotFound"
                    },
                    {
                        "numericValue": "1621",
                        "identifier": "DestinyInvalidFlag"
                    },
                    {
                        "numericValue": "1622",
                        "identifier": "DestinyInvalidRequest"
                    },
                    {
                        "numericValue": "1623",
                        "identifier": "DestinyItemNotFound"
                    },
                    {
                        "numericValue": "1624",
                        "identifier": "DestinyInvalidCustomizationChoices"
                    },
                    {
                        "numericValue": "1625",
                        "identifier": "DestinyVendorItemNotFound"
                    },
                    {
                        "numericValue": "1626",
                        "identifier": "DestinyInternalError"
                    },
                    {
                        "numericValue": "1627",
                        "identifier": "DestinyVendorNotFound"
                    },
                    {
                        "numericValue": "1628",
                        "identifier": "DestinyRecentActivitiesDatabaseError"
                    },
                    {
                        "numericValue": "1629",
                        "identifier": "DestinyItemBucketNotFound"
                    },
                    {
                        "numericValue": "1630",
                        "identifier": "DestinyInvalidMembershipType"
                    },
                    {
                        "numericValue": "1631",
                        "identifier": "DestinyVersionIncompatibility"
                    },
                    {
                        "numericValue": "1632",
                        "identifier": "DestinyItemAlreadyInInventory"
                    },
                    {
                        "numericValue": "1633",
                        "identifier": "DestinyBucketNotFound"
                    },
                    {
                        "numericValue": "1634",
                        "identifier": "DestinyCharacterNotInTower",
                        "description": "Note: This is one of those holdovers from Destiny 1. We didn't change the enum because I am lazy, but in Destiny 2 this would read \"DestinyCharacterNotInSocialSpace\""
                    },
                    {
                        "numericValue": "1635",
                        "identifier": "DestinyCharacterNotLoggedIn"
                    },
                    {
                        "numericValue": "1636",
                        "identifier": "DestinyDefinitionsNotLoaded"
                    },
                    {
                        "numericValue": "1637",
                        "identifier": "DestinyInventoryFull"
                    },
                    {
                        "numericValue": "1638",
                        "identifier": "DestinyItemFailedLevelCheck"
                    },
                    {
                        "numericValue": "1639",
                        "identifier": "DestinyItemFailedUnlockCheck"
                    },
                    {
                        "numericValue": "1640",
                        "identifier": "DestinyItemUnequippable"
                    },
                    {
                        "numericValue": "1641",
                        "identifier": "DestinyItemUniqueEquipRestricted"
                    },
                    {
                        "numericValue": "1642",
                        "identifier": "DestinyNoRoomInDestination"
                    },
                    {
                        "numericValue": "1643",
                        "identifier": "DestinyServiceFailure"
                    },
                    {
                        "numericValue": "1644",
                        "identifier": "DestinyServiceRetired"
                    },
                    {
                        "numericValue": "1645",
                        "identifier": "DestinyTransferFailed"
                    },
                    {
                        "numericValue": "1646",
                        "identifier": "DestinyTransferNotFoundForSourceBucket"
                    },
                    {
                        "numericValue": "1647",
                        "identifier": "DestinyUnexpectedResultInVendorTransferCheck"
                    },
                    {
                        "numericValue": "1648",
                        "identifier": "DestinyUniquenessViolation"
                    },
                    {
                        "numericValue": "1649",
                        "identifier": "DestinyErrorDeserializationFailure"
                    },
                    {
                        "numericValue": "1650",
                        "identifier": "DestinyValidAccountTicketRequired"
                    },
                    {
                        "numericValue": "1651",
                        "identifier": "DestinyShardRelayClientTimeout"
                    },
                    {
                        "numericValue": "1652",
                        "identifier": "DestinyShardRelayProxyTimeout"
                    },
                    {
                        "numericValue": "1653",
                        "identifier": "DestinyPGCRNotFound"
                    },
                    {
                        "numericValue": "1654",
                        "identifier": "DestinyAccountMustBeOffline"
                    },
                    {
                        "numericValue": "1655",
                        "identifier": "DestinyCanOnlyEquipInGame"
                    },
                    {
                        "numericValue": "1656",
                        "identifier": "DestinyCannotPerformActionOnEquippedItem"
                    },
                    {
                        "numericValue": "1657",
                        "identifier": "DestinyQuestAlreadyCompleted"
                    },
                    {
                        "numericValue": "1658",
                        "identifier": "DestinyQuestAlreadyTracked"
                    },
                    {
                        "numericValue": "1659",
                        "identifier": "DestinyTrackableQuestsFull"
                    },
                    {
                        "numericValue": "1660",
                        "identifier": "DestinyItemNotTransferrable"
                    },
                    {
                        "numericValue": "1661",
                        "identifier": "DestinyVendorPurchaseNotAllowed"
                    },
                    {
                        "numericValue": "1662",
                        "identifier": "DestinyContentVersionMismatch"
                    },
                    {
                        "numericValue": "1663",
                        "identifier": "DestinyItemActionForbidden"
                    },
                    {
                        "numericValue": "1664",
                        "identifier": "DestinyRefundInvalid"
                    },
                    {
                        "numericValue": "1665",
                        "identifier": "DestinyPrivacyRestriction"
                    },
                    {
                        "numericValue": "1666",
                        "identifier": "DestinyActionInsufficientPrivileges"
                    },
                    {
                        "numericValue": "1667",
                        "identifier": "DestinyInvalidClaimException"
                    },
                    {
                        "numericValue": "1668",
                        "identifier": "DestinyLegacyPlatformRestricted"
                    },
                    {
                        "numericValue": "1669",
                        "identifier": "DestinyLegacyPlatformInUse"
                    },
                    {
                        "numericValue": "1670",
                        "identifier": "DestinyLegacyPlatformInaccessible"
                    },
                    {
                        "numericValue": "1671",
                        "identifier": "DestinyCannotPerformActionAtThisLocation"
                    },
                    {
                        "numericValue": "1672",
                        "identifier": "DestinyThrottledByGameServer"
                    },
                    {
                        "numericValue": "1673",
                        "identifier": "DestinyItemNotTransferrableHasSideEffects"
                    },
                    {
                        "numericValue": "1674",
                        "identifier": "DestinyItemLocked"
                    },
                    {
                        "numericValue": "1675",
                        "identifier": "DestinyCannotAffordMaterialRequirements"
                    },
                    {
                        "numericValue": "1676",
                        "identifier": "DestinyFailedPlugInsertionRules"
                    },
                    {
                        "numericValue": "1677",
                        "identifier": "DestinySocketNotFound"
                    },
                    {
                        "numericValue": "1678",
                        "identifier": "DestinySocketActionNotAllowed"
                    },
                    {
                        "numericValue": "1679",
                        "identifier": "DestinySocketAlreadyHasPlug"
                    },
                    {
                        "numericValue": "1680",
                        "identifier": "DestinyPlugItemNotAvailable"
                    },
                    {
                        "numericValue": "1681",
                        "identifier": "DestinyCharacterLoggedInNotAllowed"
                    },
                    {
                        "numericValue": "1682",
                        "identifier": "DestinyPublicAccountNotAccessible"
                    },
                    {
                        "numericValue": "1800",
                        "identifier": "FbInvalidRequest"
                    },
                    {
                        "numericValue": "1801",
                        "identifier": "FbRedirectMismatch"
                    },
                    {
                        "numericValue": "1802",
                        "identifier": "FbAccessDenied"
                    },
                    {
                        "numericValue": "1803",
                        "identifier": "FbUnsupportedResponseType"
                    },
                    {
                        "numericValue": "1804",
                        "identifier": "FbInvalidScope"
                    },
                    {
                        "numericValue": "1805",
                        "identifier": "FbUnsupportedGrantType"
                    },
                    {
                        "numericValue": "1806",
                        "identifier": "FbInvalidGrant"
                    },
                    {
                        "numericValue": "1900",
                        "identifier": "InvitationExpired"
                    },
                    {
                        "numericValue": "1901",
                        "identifier": "InvitationUnknownType"
                    },
                    {
                        "numericValue": "1902",
                        "identifier": "InvitationInvalidResponseStatus"
                    },
                    {
                        "numericValue": "1903",
                        "identifier": "InvitationInvalidType"
                    },
                    {
                        "numericValue": "1904",
                        "identifier": "InvitationAlreadyPending"
                    },
                    {
                        "numericValue": "1905",
                        "identifier": "InvitationInsufficientPermission"
                    },
                    {
                        "numericValue": "1906",
                        "identifier": "InvitationInvalidCode"
                    },
                    {
                        "numericValue": "1907",
                        "identifier": "InvitationInvalidTargetState"
                    },
                    {
                        "numericValue": "1908",
                        "identifier": "InvitationCannotBeReactivated"
                    },
                    {
                        "numericValue": "1910",
                        "identifier": "InvitationNoRecipients"
                    },
                    {
                        "numericValue": "1911",
                        "identifier": "InvitationGroupCannotSendToSelf"
                    },
                    {
                        "numericValue": "1912",
                        "identifier": "InvitationTooManyRecipients"
                    },
                    {
                        "numericValue": "1913",
                        "identifier": "InvitationInvalid"
                    },
                    {
                        "numericValue": "1914",
                        "identifier": "InvitationNotFound"
                    },
                    {
                        "numericValue": "2000",
                        "identifier": "TokenInvalid"
                    },
                    {
                        "numericValue": "2001",
                        "identifier": "TokenBadFormat"
                    },
                    {
                        "numericValue": "2002",
                        "identifier": "TokenAlreadyClaimed"
                    },
                    {
                        "numericValue": "2003",
                        "identifier": "TokenAlreadyClaimedSelf"
                    },
                    {
                        "numericValue": "2004",
                        "identifier": "TokenThrottling"
                    },
                    {
                        "numericValue": "2005",
                        "identifier": "TokenUnknownRedemptionFailure"
                    },
                    {
                        "numericValue": "2006",
                        "identifier": "TokenPurchaseClaimFailedAfterTokenClaimed"
                    },
                    {
                        "numericValue": "2007",
                        "identifier": "TokenUserAlreadyOwnsOffer"
                    },
                    {
                        "numericValue": "2008",
                        "identifier": "TokenInvalidOfferKey"
                    },
                    {
                        "numericValue": "2009",
                        "identifier": "TokenEmailNotValidated"
                    },
                    {
                        "numericValue": "2010",
                        "identifier": "TokenProvisioningBadVendorOrOffer"
                    },
                    {
                        "numericValue": "2011",
                        "identifier": "TokenPurchaseHistoryUnknownError"
                    },
                    {
                        "numericValue": "2012",
                        "identifier": "TokenThrottleStateUnknownError"
                    },
                    {
                        "numericValue": "2013",
                        "identifier": "TokenUserAgeNotVerified"
                    },
                    {
                        "numericValue": "2014",
                        "identifier": "TokenExceededOfferMaximum"
                    },
                    {
                        "numericValue": "2015",
                        "identifier": "TokenNoAvailableUnlocks"
                    },
                    {
                        "numericValue": "2016",
                        "identifier": "TokenMarketplaceInvalidPlatform"
                    },
                    {
                        "numericValue": "2017",
                        "identifier": "TokenNoMarketplaceCodesFound"
                    },
                    {
                        "numericValue": "2018",
                        "identifier": "TokenOfferNotAvailableForRedemption"
                    },
                    {
                        "numericValue": "2019",
                        "identifier": "TokenUnlockPartialFailure"
                    },
                    {
                        "numericValue": "2020",
                        "identifier": "TokenMarketplaceInvalidRegion"
                    },
                    {
                        "numericValue": "2021",
                        "identifier": "TokenOfferExpired"
                    },
                    {
                        "numericValue": "2022",
                        "identifier": "RAFExceededMaximumReferrals"
                    },
                    {
                        "numericValue": "2023",
                        "identifier": "RAFDuplicateBond"
                    },
                    {
                        "numericValue": "2024",
                        "identifier": "RAFNoValidVeteranDestinyMembershipsFound"
                    },
                    {
                        "numericValue": "2025",
                        "identifier": "RAFNotAValidVeteranUser"
                    },
                    {
                        "numericValue": "2026",
                        "identifier": "RAFCodeAlreadyClaimedOrNotFound"
                    },
                    {
                        "numericValue": "2027",
                        "identifier": "RAFMismatchedDestinyMembershipType"
                    },
                    {
                        "numericValue": "2028",
                        "identifier": "RAFUnableToAccessPurchaseHistory"
                    },
                    {
                        "numericValue": "2029",
                        "identifier": "RAFUnableToCreateBond"
                    },
                    {
                        "numericValue": "2030",
                        "identifier": "RAFUnableToFindBond"
                    },
                    {
                        "numericValue": "2031",
                        "identifier": "RAFUnableToRemoveBond"
                    },
                    {
                        "numericValue": "2032",
                        "identifier": "RAFCannotBondToSelf"
                    },
                    {
                        "numericValue": "2033",
                        "identifier": "RAFInvalidPlatform"
                    },
                    {
                        "numericValue": "2034",
                        "identifier": "RAFGenerateThrottled"
                    },
                    {
                        "numericValue": "2035",
                        "identifier": "RAFUnableToCreateBondVersionMismatch"
                    },
                    {
                        "numericValue": "2036",
                        "identifier": "RAFUnableToRemoveBondVersionMismatch"
                    },
                    {
                        "numericValue": "2037",
                        "identifier": "RAFRedeemThrottled"
                    },
                    {
                        "numericValue": "2038",
                        "identifier": "NoAvailableDiscountCode"
                    },
                    {
                        "numericValue": "2039",
                        "identifier": "DiscountAlreadyClaimed"
                    },
                    {
                        "numericValue": "2040",
                        "identifier": "DiscountClaimFailure"
                    },
                    {
                        "numericValue": "2041",
                        "identifier": "DiscountConfigurationFailure"
                    },
                    {
                        "numericValue": "2042",
                        "identifier": "DiscountGenerationFailure"
                    },
                    {
                        "numericValue": "2043",
                        "identifier": "DiscountAlreadyExists"
                    },
                    {
                        "numericValue": "2044",
                        "identifier": "TokenRequiresCredentialXuid"
                    },
                    {
                        "numericValue": "2045",
                        "identifier": "TokenRequiresCredentialPsnid"
                    },
                    {
                        "numericValue": "2046",
                        "identifier": "OfferRequired"
                    },
                    {
                        "numericValue": "2047",
                        "identifier": "UnknownEververseHistoryError"
                    },
                    {
                        "numericValue": "2048",
                        "identifier": "MissingEververseHistoryError"
                    },
                    {
                        "numericValue": "2049",
                        "identifier": "BungieRewardEmailStateInvalid"
                    },
                    {
                        "numericValue": "2050",
                        "identifier": "BungieRewardNotYetClaimable"
                    },
                    {
                        "numericValue": "2051",
                        "identifier": "MissingOfferConfig"
                    },
                    {
                        "numericValue": "2052",
                        "identifier": "RAFQuestEntitlementRequiresBnet"
                    },
                    {
                        "numericValue": "2053",
                        "identifier": "RAFQuestEntitlementTransportFailure"
                    },
                    {
                        "numericValue": "2054",
                        "identifier": "RAFQuestEntitlementUnknownFailure"
                    },
                    {
                        "numericValue": "2055",
                        "identifier": "RAFVeteranRewardUnknownFailure"
                    },
                    {
                        "numericValue": "2056",
                        "identifier": "RAFTooEarlyToCancelBond"
                    },
                    {
                        "numericValue": "2100",
                        "identifier": "ApiExceededMaxKeys"
                    },
                    {
                        "numericValue": "2101",
                        "identifier": "ApiInvalidOrExpiredKey"
                    },
                    {
                        "numericValue": "2102",
                        "identifier": "ApiKeyMissingFromRequest"
                    },
                    {
                        "numericValue": "2103",
                        "identifier": "ApplicationDisabled"
                    },
                    {
                        "numericValue": "2104",
                        "identifier": "ApplicationExceededMax"
                    },
                    {
                        "numericValue": "2105",
                        "identifier": "ApplicationDisallowedByScope"
                    },
                    {
                        "numericValue": "2106",
                        "identifier": "AuthorizationCodeInvalid"
                    },
                    {
                        "numericValue": "2107",
                        "identifier": "OriginHeaderDoesNotMatchKey"
                    },
                    {
                        "numericValue": "2108",
                        "identifier": "AccessNotPermittedByApplicationScope"
                    },
                    {
                        "numericValue": "2109",
                        "identifier": "ApplicationNameIsTaken"
                    },
                    {
                        "numericValue": "2110",
                        "identifier": "RefreshTokenNotYetValid"
                    },
                    {
                        "numericValue": "2111",
                        "identifier": "AccessTokenHasExpired"
                    },
                    {
                        "numericValue": "2112",
                        "identifier": "ApplicationTokenFormatNotValid"
                    },
                    {
                        "numericValue": "2113",
                        "identifier": "ApplicationNotConfiguredForBungieAuth"
                    },
                    {
                        "numericValue": "2114",
                        "identifier": "ApplicationNotConfiguredForOAuth"
                    },
                    {
                        "numericValue": "2115",
                        "identifier": "OAuthAccessTokenExpired"
                    },
                    {
                        "numericValue": "2200",
                        "identifier": "PartnershipInvalidType"
                    },
                    {
                        "numericValue": "2201",
                        "identifier": "PartnershipValidationError"
                    },
                    {
                        "numericValue": "2202",
                        "identifier": "PartnershipValidationTimeout"
                    },
                    {
                        "numericValue": "2203",
                        "identifier": "PartnershipAccessFailure"
                    },
                    {
                        "numericValue": "2204",
                        "identifier": "PartnershipAccountInvalid"
                    },
                    {
                        "numericValue": "2205",
                        "identifier": "PartnershipGetAccountInfoFailure"
                    },
                    {
                        "numericValue": "2206",
                        "identifier": "PartnershipDisabled"
                    },
                    {
                        "numericValue": "2207",
                        "identifier": "PartnershipAlreadyExists"
                    },
                    {
                        "numericValue": "2300",
                        "identifier": "CommunityStreamingUnavailable"
                    },
                    {
                        "numericValue": "2500",
                        "identifier": "TwitchNotLinked"
                    },
                    {
                        "numericValue": "2501",
                        "identifier": "TwitchAccountNotFound"
                    },
                    {
                        "numericValue": "2502",
                        "identifier": "TwitchCouldNotLoadDestinyInfo"
                    },
                    {
                        "numericValue": "2600",
                        "identifier": "TrendingCategoryNotFound"
                    },
                    {
                        "numericValue": "2601",
                        "identifier": "TrendingEntryTypeNotSupported"
                    },
                    {
                        "numericValue": "2700",
                        "identifier": "ReportOffenderNotInPgcr"
                    },
                    {
                        "numericValue": "2701",
                        "identifier": "ReportRequestorNotInPgcr"
                    },
                    {
                        "numericValue": "2702",
                        "identifier": "ReportSubmissionFailed"
                    },
                    {
                        "numericValue": "2703",
                        "identifier": "ReportCannotReportSelf"
                    },
                    {
                        "numericValue": "2800",
                        "identifier": "AwaTypeDisabled"
                    },
                    {
                        "numericValue": "2801",
                        "identifier": "AwaTooManyPendingRequests"
                    },
                    {
                        "numericValue": "2802",
                        "identifier": "AwaTheFeatureRequiresARegisteredDevice"
                    },
                    {
                        "numericValue": "2803",
                        "identifier": "AwaRequestWasUnansweredForTooLong"
                    },
                    {
                        "numericValue": "2804",
                        "identifier": "AwaWriteRequestMissingOrInvalidToken"
                    },
                    {
                        "numericValue": "2805",
                        "identifier": "AwaWriteRequestTokenExpired"
                    },
                    {
                        "numericValue": "2806",
                        "identifier": "AwaWriteRequestTokenUsageLimitReached"
                    },
                    {
                        "numericValue": "3000",
                        "identifier": "ClanFireteamNotFound"
                    },
                    {
                        "numericValue": "3001",
                        "identifier": "ClanFireteamAddNoAlternatesForImmediate"
                    },
                    {
                        "numericValue": "3002",
                        "identifier": "ClanFireteamFull"
                    },
                    {
                        "numericValue": "3003",
                        "identifier": "ClanFireteamAltFull"
                    },
                    {
                        "numericValue": "3004",
                        "identifier": "ClanFireteamBlocked"
                    },
                    {
                        "numericValue": "3005",
                        "identifier": "ClanFireteamPlayerEntryNotFound"
                    },
                    {
                        "numericValue": "3006",
                        "identifier": "ClanFireteamPermissions"
                    },
                    {
                        "numericValue": "3007",
                        "identifier": "ClanFireteamInvalidPlatform"
                    },
                    {
                        "numericValue": "3008",
                        "identifier": "ClanFireteamCannotAdjustSlotCount"
                    },
                    {
                        "numericValue": "3009",
                        "identifier": "ClanFireteamInvalidPlayerPlatform"
                    },
                    {
                        "numericValue": "3010",
                        "identifier": "ClanFireteamNotReadyForInvitesNotEnoughPlayers"
                    },
                    {
                        "numericValue": "3011",
                        "identifier": "ClanFireteamGameInvitesNotSupportForPlatform"
                    },
                    {
                        "numericValue": "3012",
                        "identifier": "ClanFireteamPlatformInvitePreqFailure"
                    },
                    {
                        "numericValue": "3013",
                        "identifier": "ClanFireteamInvalidAuthContext"
                    },
                    {
                        "numericValue": "3014",
                        "identifier": "ClanFireteamInvalidAuthProviderPsn"
                    },
                    {
                        "numericValue": "3015",
                        "identifier": "ClanFireteamPs4SessionFull"
                    },
                    {
                        "numericValue": "3016",
                        "identifier": "ClanFireteamInvalidAuthToken"
                    },
                    {
                        "numericValue": "3017",
                        "identifier": "ClanFireteamScheduledFireteamsDisabled"
                    },
                    {
                        "numericValue": "3018",
                        "identifier": "ClanFireteamNotReadyForInvitesNotScheduledYet"
                    },
                    {
                        "numericValue": "3019",
                        "identifier": "ClanFireteamNotReadyForInvitesClosed"
                    },
                    {
                        "numericValue": "3020",
                        "identifier": "ClanFireteamScheduledFireteamsRequireAdminPermissions"
                    },
                    {
                        "numericValue": "3021",
                        "identifier": "ClanFireteamNonPublicMustHaveClan"
                    },
                    {
                        "numericValue": "3022",
                        "identifier": "ClanFireteamPublicCreationRestriction"
                    },
                    {
                        "numericValue": "3023",
                        "identifier": "ClanFireteamAlreadyJoined"
                    },
                    {
                        "numericValue": "3024",
                        "identifier": "ClanFireteamScheduledFireteamsRange"
                    },
                    {
                        "numericValue": "3025",
                        "identifier": "ClanFireteamPublicCreationRestrictionExtended"
                    }
                ]
            },
            "BungieMembershipType": {
                "enum": [
                    "0",
                    "1",
                    "2",
                    "4",
                    "10",
                    "254",
                    "-1"
                ],
                "type": "integer",
                "description": "The types of membership the Accounts system supports. This is the external facing enum used in place of the internal-only Bungie.SharedDefinitions.MembershipType.",
                "format": "int32",
                "x-enum-values": [
                    {
                        "numericValue": "0",
                        "identifier": "None"
                    },
                    {
                        "numericValue": "1",
                        "identifier": "TigerXbox"
                    },
                    {
                        "numericValue": "2",
                        "identifier": "TigerPsn"
                    },
                    {
                        "numericValue": "4",
                        "identifier": "TigerBlizzard"
                    },
                    {
                        "numericValue": "10",
                        "identifier": "TigerDemon"
                    },
                    {
                        "numericValue": "254",
                        "identifier": "BungieNext"
                    },
                    {
                        "numericValue": "-1",
                        "identifier": "All",
                        "description": "\"All\" is only valid for searching capabilities: you need to pass the actual matching BungieMembershipType for any query where you pass a known membershipId."
                    }
                ]
            },
            "Destiny.Config.DestinyManifest": {
                "type": "object",
                "properties": {
                    "version": {
                        "type": "string"
                    },
                    "mobileAssetContentPath": {
                        "type": "string"
                    },
                    "mobileGearAssetDataBases": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Destiny.Config.GearAssetDataBaseDefinition"
                        }
                    },
                    "mobileWorldContentPaths": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "x-dictionary-key": {
                            "type": "string"
                        }
                    },
                    "jsonWorldContentPaths": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "x-dictionary-key": {
                            "type": "string"
                        }
                    },
                    "mobileClanBannerDatabasePath": {
                        "type": "string"
                    },
                    "mobileGearCDN": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "x-dictionary-key": {
                            "type": "string"
                        }
                    }
                },
                "description": "DestinyManifest is the external-facing contract for just the properties needed by those calling the Destiny Platform."
            },
            "Destiny.Config.GearAssetDataBaseDefinition": {
                "type": "object",
                "properties": {
                    "version": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "path": {
                        "type": "string"
                    }
                }
            }
        },
        "responses": {
            "Destiny.GetPublicAdvisorsV2": {
                "description": "Look at the Response property for more information about the nature of this response",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Response": {
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "ErrorCode": {
                                    "$ref": "#/components/schemas/Exceptions.PlatformErrorCodes"
                                },
                                "ThrottleSeconds": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "ErrorStatus": {
                                    "type": "string"
                                },
                                "Message": {
                                    "type": "string"
                                },
                                "MessageData": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "x-dictionary-key": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "Destiny.GetAdvisorsForAccount": {
                "description": "Look at the Response property for more information about the nature of this response",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Response": {
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "ErrorCode": {
                                    "$ref": "#/components/schemas/Exceptions.PlatformErrorCodes"
                                },
                                "ThrottleSeconds": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "ErrorStatus": {
                                    "type": "string"
                                },
                                "Message": {
                                    "type": "string"
                                },
                                "MessageData": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "x-dictionary-key": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "Destiny.GetAdvisorsForCharacterV2": {
                "description": "Look at the Response property for more information about the nature of this response",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Response": {
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "ErrorCode": {
                                    "$ref": "#/components/schemas/Exceptions.PlatformErrorCodes"
                                },
                                "ThrottleSeconds": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "ErrorStatus": {
                                    "type": "string"
                                },
                                "Message": {
                                    "type": "string"
                                },
                                "MessageData": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "x-dictionary-key": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "Destiny.Config.DestinyManifest": {
                "description": "DestinyManifest is the external-facing contract for just the properties needed by those calling the Destiny Platform.",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Response": {
                                    "$ref": "#/components/schemas/Destiny.Config.DestinyManifest"
                                },
                                "ErrorCode": {
                                    "$ref": "#/components/schemas/Exceptions.PlatformErrorCodes"
                                },
                                "ThrottleSeconds": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "ErrorStatus": {
                                    "type": "string"
                                },
                                "Message": {
                                    "type": "string"
                                },
                                "MessageData": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "x-dictionary-key": {
                                        "type": "string"
                                    }
                                },
                                "DetailedErrorTrace": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "Destiny.GetDestinySingleDefinition": {
                "description": "Look at the Response property for more information about the nature of this response",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Response": {
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "ErrorCode": {
                                    "$ref": "#/components/schemas/Exceptions.PlatformErrorCodes"
                                },
                                "ThrottleSeconds": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "ErrorStatus": {
                                    "type": "string"
                                },
                                "Message": {
                                    "type": "string"
                                },
                                "MessageData": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "x-dictionary-key": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "Destiny.SearchDestinyPlayer": {
                "description": "Look at the Response property for more information about the nature of this response",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Response": {
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "ErrorCode": {
                                    "$ref": "#/components/schemas/Exceptions.PlatformErrorCodes"
                                },
                                "ThrottleSeconds": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "ErrorStatus": {
                                    "type": "string"
                                },
                                "Message": {
                                    "type": "string"
                                },
                                "MessageData": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "x-dictionary-key": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "Destiny.GetItemReferenceDetail": {
                "description": "Look at the Response property for more information about the nature of this response",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Response": {
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "ErrorCode": {
                                    "$ref": "#/components/schemas/Exceptions.PlatformErrorCodes"
                                },
                                "ThrottleSeconds": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "ErrorStatus": {
                                    "type": "string"
                                },
                                "Message": {
                                    "type": "string"
                                },
                                "MessageData": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "x-dictionary-key": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "Destiny.GetAllItemsSummary": {
                "description": "Look at the Response property for more information about the nature of this response",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Response": {
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "ErrorCode": {
                                    "$ref": "#/components/schemas/Exceptions.PlatformErrorCodes"
                                },
                                "ThrottleSeconds": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "ErrorStatus": {
                                    "type": "string"
                                },
                                "Message": {
                                    "type": "string"
                                },
                                "MessageData": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "x-dictionary-key": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "Destiny.GetAccount": {
                "description": "Look at the Response property for more information about the nature of this response",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Response": {
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "ErrorCode": {
                                    "$ref": "#/components/schemas/Exceptions.PlatformErrorCodes"
                                },
                                "ThrottleSeconds": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "ErrorStatus": {
                                    "type": "string"
                                },
                                "Message": {
                                    "type": "string"
                                },
                                "MessageData": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "x-dictionary-key": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "Destiny.GetAccountSummary": {
                "description": "Look at the Response property for more information about the nature of this response",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Response": {
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "ErrorCode": {
                                    "$ref": "#/components/schemas/Exceptions.PlatformErrorCodes"
                                },
                                "ThrottleSeconds": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "ErrorStatus": {
                                    "type": "string"
                                },
                                "Message": {
                                    "type": "string"
                                },
                                "MessageData": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "x-dictionary-key": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "Destiny.GetVault": {
                "description": "Look at the Response property for more information about the nature of this response",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Response": {
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "ErrorCode": {
                                    "$ref": "#/components/schemas/Exceptions.PlatformErrorCodes"
                                },
                                "ThrottleSeconds": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "ErrorStatus": {
                                    "type": "string"
                                },
                                "Message": {
                                    "type": "string"
                                },
                                "MessageData": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "x-dictionary-key": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "Destiny.GetVaultSummary": {
                "description": "Look at the Response property for more information about the nature of this response",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Response": {
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "ErrorCode": {
                                    "$ref": "#/components/schemas/Exceptions.PlatformErrorCodes"
                                },
                                "ThrottleSeconds": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "ErrorStatus": {
                                    "type": "string"
                                },
                                "Message": {
                                    "type": "string"
                                },
                                "MessageData": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "x-dictionary-key": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "Destiny.GetCharacterSummary": {
                "description": "Look at the Response property for more information about the nature of this response",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Response": {
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "ErrorCode": {
                                    "$ref": "#/components/schemas/Exceptions.PlatformErrorCodes"
                                },
                                "ThrottleSeconds": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "ErrorStatus": {
                                    "type": "string"
                                },
                                "Message": {
                                    "type": "string"
                                },
                                "MessageData": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "x-dictionary-key": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "Destiny.GetCharacter": {
                "description": "Look at the Response property for more information about the nature of this response",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Response": {
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "ErrorCode": {
                                    "$ref": "#/components/schemas/Exceptions.PlatformErrorCodes"
                                },
                                "ThrottleSeconds": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "ErrorStatus": {
                                    "type": "string"
                                },
                                "Message": {
                                    "type": "string"
                                },
                                "MessageData": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "x-dictionary-key": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "Destiny.GetCharacterInventory": {
                "description": "Look at the Response property for more information about the nature of this response",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Response": {
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "ErrorCode": {
                                    "$ref": "#/components/schemas/Exceptions.PlatformErrorCodes"
                                },
                                "ThrottleSeconds": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "ErrorStatus": {
                                    "type": "string"
                                },
                                "Message": {
                                    "type": "string"
                                },
                                "MessageData": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "x-dictionary-key": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "Destiny.GetCharacterInventorySummary": {
                "description": "Look at the Response property for more information about the nature of this response",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Response": {
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "ErrorCode": {
                                    "$ref": "#/components/schemas/Exceptions.PlatformErrorCodes"
                                },
                                "ThrottleSeconds": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "ErrorStatus": {
                                    "type": "string"
                                },
                                "Message": {
                                    "type": "string"
                                },
                                "MessageData": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "x-dictionary-key": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "Destiny.GetItemDetail": {
                "description": "Look at the Response property for more information about the nature of this response",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Response": {
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "ErrorCode": {
                                    "$ref": "#/components/schemas/Exceptions.PlatformErrorCodes"
                                },
                                "ThrottleSeconds": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "ErrorStatus": {
                                    "type": "string"
                                },
                                "Message": {
                                    "type": "string"
                                },
                                "MessageData": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "x-dictionary-key": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "Destiny.GetCharacterActivities": {
                "description": "Look at the Response property for more information about the nature of this response",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Response": {
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "ErrorCode": {
                                    "$ref": "#/components/schemas/Exceptions.PlatformErrorCodes"
                                },
                                "ThrottleSeconds": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "ErrorStatus": {
                                    "type": "string"
                                },
                                "Message": {
                                    "type": "string"
                                },
                                "MessageData": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "x-dictionary-key": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "Destiny.GetCharacterProgression": {
                "description": "Look at the Response property for more information about the nature of this response",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Response": {
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "ErrorCode": {
                                    "$ref": "#/components/schemas/Exceptions.PlatformErrorCodes"
                                },
                                "ThrottleSeconds": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "ErrorStatus": {
                                    "type": "string"
                                },
                                "Message": {
                                    "type": "string"
                                },
                                "MessageData": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "x-dictionary-key": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "Destiny.GetTriumphs": {
                "description": "Look at the Response property for more information about the nature of this response",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Response": {
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "ErrorCode": {
                                    "$ref": "#/components/schemas/Exceptions.PlatformErrorCodes"
                                },
                                "ThrottleSeconds": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "ErrorStatus": {
                                    "type": "string"
                                },
                                "Message": {
                                    "type": "string"
                                },
                                "MessageData": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "x-dictionary-key": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "Destiny.GetRecordBookCompletionStatus": {
                "description": "Look at the Response property for more information about the nature of this response",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Response": {
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "ErrorCode": {
                                    "$ref": "#/components/schemas/Exceptions.PlatformErrorCodes"
                                },
                                "ThrottleSeconds": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "ErrorStatus": {
                                    "type": "string"
                                },
                                "Message": {
                                    "type": "string"
                                },
                                "MessageData": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "x-dictionary-key": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "Destiny.GetAllVendorsForCurrentCharacter": {
                "description": "Look at the Response property for more information about the nature of this response",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Response": {
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "ErrorCode": {
                                    "$ref": "#/components/schemas/Exceptions.PlatformErrorCodes"
                                },
                                "ThrottleSeconds": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "ErrorStatus": {
                                    "type": "string"
                                },
                                "Message": {
                                    "type": "string"
                                },
                                "MessageData": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "x-dictionary-key": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "Destiny.GetVendorSummariesForCurrentCharacter": {
                "description": "Look at the Response property for more information about the nature of this response",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Response": {
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "ErrorCode": {
                                    "$ref": "#/components/schemas/Exceptions.PlatformErrorCodes"
                                },
                                "ThrottleSeconds": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "ErrorStatus": {
                                    "type": "string"
                                },
                                "Message": {
                                    "type": "string"
                                },
                                "MessageData": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "x-dictionary-key": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "Destiny.GetVendorForCurrentCharacter": {
                "description": "Look at the Response property for more information about the nature of this response",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Response": {
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "ErrorCode": {
                                    "$ref": "#/components/schemas/Exceptions.PlatformErrorCodes"
                                },
                                "ThrottleSeconds": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "ErrorStatus": {
                                    "type": "string"
                                },
                                "Message": {
                                    "type": "string"
                                },
                                "MessageData": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "x-dictionary-key": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "Destiny.GetVendorItemDetailForCurrentCharacter": {
                "description": "Look at the Response property for more information about the nature of this response",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Response": {
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "ErrorCode": {
                                    "$ref": "#/components/schemas/Exceptions.PlatformErrorCodes"
                                },
                                "ThrottleSeconds": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "ErrorStatus": {
                                    "type": "string"
                                },
                                "Message": {
                                    "type": "string"
                                },
                                "MessageData": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "x-dictionary-key": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "Destiny.GetPublicAdvisors": {
                "description": "Look at the Response property for more information about the nature of this response",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Response": {
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "ErrorCode": {
                                    "$ref": "#/components/schemas/Exceptions.PlatformErrorCodes"
                                },
                                "ThrottleSeconds": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "ErrorStatus": {
                                    "type": "string"
                                },
                                "Message": {
                                    "type": "string"
                                },
                                "MessageData": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "x-dictionary-key": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "Destiny.GetPublicXurVendor": {
                "description": "Look at the Response property for more information about the nature of this response",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Response": {
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "ErrorCode": {
                                    "$ref": "#/components/schemas/Exceptions.PlatformErrorCodes"
                                },
                                "ThrottleSeconds": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "ErrorStatus": {
                                    "type": "string"
                                },
                                "Message": {
                                    "type": "string"
                                },
                                "MessageData": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "x-dictionary-key": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "Destiny.GetPublicVendor": {
                "description": "Look at the Response property for more information about the nature of this response",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Response": {
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "ErrorCode": {
                                    "$ref": "#/components/schemas/Exceptions.PlatformErrorCodes"
                                },
                                "ThrottleSeconds": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "ErrorStatus": {
                                    "type": "string"
                                },
                                "Message": {
                                    "type": "string"
                                },
                                "MessageData": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "x-dictionary-key": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "Destiny.GetAdvisorsForCurrentCharacter": {
                "description": "Look at the Response property for more information about the nature of this response",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Response": {
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "ErrorCode": {
                                    "$ref": "#/components/schemas/Exceptions.PlatformErrorCodes"
                                },
                                "ThrottleSeconds": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "ErrorStatus": {
                                    "type": "string"
                                },
                                "Message": {
                                    "type": "string"
                                },
                                "MessageData": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "x-dictionary-key": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "Destiny.GetAdvisorsForCharacter": {
                "description": "Look at the Response property for more information about the nature of this response",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Response": {
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "ErrorCode": {
                                    "$ref": "#/components/schemas/Exceptions.PlatformErrorCodes"
                                },
                                "ThrottleSeconds": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "ErrorStatus": {
                                    "type": "string"
                                },
                                "Message": {
                                    "type": "string"
                                },
                                "MessageData": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "x-dictionary-key": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "Destiny.GetSpecialEventAdvisors": {
                "description": "Look at the Response property for more information about the nature of this response",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Response": {
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "ErrorCode": {
                                    "$ref": "#/components/schemas/Exceptions.PlatformErrorCodes"
                                },
                                "ThrottleSeconds": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "ErrorStatus": {
                                    "type": "string"
                                },
                                "Message": {
                                    "type": "string"
                                },
                                "MessageData": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "x-dictionary-key": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "Destiny.GetDestinyLiveTileContentItems": {
                "description": "Look at the Response property for more information about the nature of this response",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Response": {
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "ErrorCode": {
                                    "$ref": "#/components/schemas/Exceptions.PlatformErrorCodes"
                                },
                                "ThrottleSeconds": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "ErrorStatus": {
                                    "type": "string"
                                },
                                "Message": {
                                    "type": "string"
                                },
                                "MessageData": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "x-dictionary-key": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "Destiny.GetBondAdvisors": {
                "description": "Look at the Response property for more information about the nature of this response",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Response": {
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "ErrorCode": {
                                    "$ref": "#/components/schemas/Exceptions.PlatformErrorCodes"
                                },
                                "ThrottleSeconds": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "ErrorStatus": {
                                    "type": "string"
                                },
                                "Message": {
                                    "type": "string"
                                },
                                "MessageData": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "x-dictionary-key": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "Destiny.GetPublicVendorWithMetadata": {
                "description": "Look at the Response property for more information about the nature of this response",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Response": {
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "ErrorCode": {
                                    "$ref": "#/components/schemas/Exceptions.PlatformErrorCodes"
                                },
                                "ThrottleSeconds": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "ErrorStatus": {
                                    "type": "string"
                                },
                                "Message": {
                                    "type": "string"
                                },
                                "MessageData": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "x-dictionary-key": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "Destiny.GetVendorForCurrentCharacterWithMetadata": {
                "description": "Look at the Response property for more information about the nature of this response",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Response": {
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "ErrorCode": {
                                    "$ref": "#/components/schemas/Exceptions.PlatformErrorCodes"
                                },
                                "ThrottleSeconds": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "ErrorStatus": {
                                    "type": "string"
                                },
                                "Message": {
                                    "type": "string"
                                },
                                "MessageData": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "x-dictionary-key": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "Destiny.GetVendorItemDetailForCurrentCharacterWithMetadata": {
                "description": "Look at the Response property for more information about the nature of this response",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Response": {
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "ErrorCode": {
                                    "$ref": "#/components/schemas/Exceptions.PlatformErrorCodes"
                                },
                                "ThrottleSeconds": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "ErrorStatus": {
                                    "type": "string"
                                },
                                "Message": {
                                    "type": "string"
                                },
                                "MessageData": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "x-dictionary-key": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "Destiny.TransferItem": {
                "description": "Look at the Response property for more information about the nature of this response",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Response": {
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "ErrorCode": {
                                    "$ref": "#/components/schemas/Exceptions.PlatformErrorCodes"
                                },
                                "ThrottleSeconds": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "ErrorStatus": {
                                    "type": "string"
                                },
                                "Message": {
                                    "type": "string"
                                },
                                "MessageData": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "x-dictionary-key": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "Destiny.EquipItem": {
                "description": "Look at the Response property for more information about the nature of this response",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Response": {
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "ErrorCode": {
                                    "$ref": "#/components/schemas/Exceptions.PlatformErrorCodes"
                                },
                                "ThrottleSeconds": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "ErrorStatus": {
                                    "type": "string"
                                },
                                "Message": {
                                    "type": "string"
                                },
                                "MessageData": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "x-dictionary-key": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "Destiny.EquipItems": {
                "description": "Look at the Response property for more information about the nature of this response",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Response": {
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "ErrorCode": {
                                    "$ref": "#/components/schemas/Exceptions.PlatformErrorCodes"
                                },
                                "ThrottleSeconds": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "ErrorStatus": {
                                    "type": "string"
                                },
                                "Message": {
                                    "type": "string"
                                },
                                "MessageData": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "x-dictionary-key": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "Destiny.SetItemLockState": {
                "description": "Look at the Response property for more information about the nature of this response",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Response": {
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "ErrorCode": {
                                    "$ref": "#/components/schemas/Exceptions.PlatformErrorCodes"
                                },
                                "ThrottleSeconds": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "ErrorStatus": {
                                    "type": "string"
                                },
                                "Message": {
                                    "type": "string"
                                },
                                "MessageData": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "x-dictionary-key": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "Destiny.SetQuestTrackedState": {
                "description": "Look at the Response property for more information about the nature of this response",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Response": {
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "ErrorCode": {
                                    "$ref": "#/components/schemas/Exceptions.PlatformErrorCodes"
                                },
                                "ThrottleSeconds": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "ErrorStatus": {
                                    "type": "string"
                                },
                                "Message": {
                                    "type": "string"
                                },
                                "MessageData": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "x-dictionary-key": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "Destiny.GetHistoricalStatsDefinition": {
                "description": "Look at the Response property for more information about the nature of this response",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Response": {
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "ErrorCode": {
                                    "$ref": "#/components/schemas/Exceptions.PlatformErrorCodes"
                                },
                                "ThrottleSeconds": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "ErrorStatus": {
                                    "type": "string"
                                },
                                "Message": {
                                    "type": "string"
                                },
                                "MessageData": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "x-dictionary-key": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "Destiny.GetHistoricalStats": {
                "description": "Look at the Response property for more information about the nature of this response",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Response": {
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "ErrorCode": {
                                    "$ref": "#/components/schemas/Exceptions.PlatformErrorCodes"
                                },
                                "ThrottleSeconds": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "ErrorStatus": {
                                    "type": "string"
                                },
                                "Message": {
                                    "type": "string"
                                },
                                "MessageData": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "x-dictionary-key": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "Destiny.GetHistoricalStatsForAccount": {
                "description": "Look at the Response property for more information about the nature of this response",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Response": {
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "ErrorCode": {
                                    "$ref": "#/components/schemas/Exceptions.PlatformErrorCodes"
                                },
                                "ThrottleSeconds": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "ErrorStatus": {
                                    "type": "string"
                                },
                                "Message": {
                                    "type": "string"
                                },
                                "MessageData": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "x-dictionary-key": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "Destiny.GetActivityHistory": {
                "description": "Look at the Response property for more information about the nature of this response",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Response": {
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "ErrorCode": {
                                    "$ref": "#/components/schemas/Exceptions.PlatformErrorCodes"
                                },
                                "ThrottleSeconds": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "ErrorStatus": {
                                    "type": "string"
                                },
                                "Message": {
                                    "type": "string"
                                },
                                "MessageData": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "x-dictionary-key": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "Destiny.GetUniqueWeaponHistory": {
                "description": "Look at the Response property for more information about the nature of this response",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Response": {
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "ErrorCode": {
                                    "$ref": "#/components/schemas/Exceptions.PlatformErrorCodes"
                                },
                                "ThrottleSeconds": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "ErrorStatus": {
                                    "type": "string"
                                },
                                "Message": {
                                    "type": "string"
                                },
                                "MessageData": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "x-dictionary-key": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "Destiny.GetLeaderboards": {
                "description": "Look at the Response property for more information about the nature of this response",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Response": {
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "ErrorCode": {
                                    "$ref": "#/components/schemas/Exceptions.PlatformErrorCodes"
                                },
                                "ThrottleSeconds": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "ErrorStatus": {
                                    "type": "string"
                                },
                                "Message": {
                                    "type": "string"
                                },
                                "MessageData": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "x-dictionary-key": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "Destiny.GetClanLeaderboards": {
                "description": "Look at the Response property for more information about the nature of this response",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Response": {
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "ErrorCode": {
                                    "$ref": "#/components/schemas/Exceptions.PlatformErrorCodes"
                                },
                                "ThrottleSeconds": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "ErrorStatus": {
                                    "type": "string"
                                },
                                "Message": {
                                    "type": "string"
                                },
                                "MessageData": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "x-dictionary-key": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "Destiny.GetLeaderboardsForPsn": {
                "description": "Look at the Response property for more information about the nature of this response",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Response": {
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "ErrorCode": {
                                    "$ref": "#/components/schemas/Exceptions.PlatformErrorCodes"
                                },
                                "ThrottleSeconds": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "ErrorStatus": {
                                    "type": "string"
                                },
                                "Message": {
                                    "type": "string"
                                },
                                "MessageData": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "x-dictionary-key": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "Destiny.GetLeaderboardsForCharacter": {
                "description": "Look at the Response property for more information about the nature of this response",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Response": {
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "ErrorCode": {
                                    "$ref": "#/components/schemas/Exceptions.PlatformErrorCodes"
                                },
                                "ThrottleSeconds": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "ErrorStatus": {
                                    "type": "string"
                                },
                                "Message": {
                                    "type": "string"
                                },
                                "MessageData": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "x-dictionary-key": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "Destiny.GetPostGameCarnageReport": {
                "description": "Look at the Response property for more information about the nature of this response",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Response": {
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "ErrorCode": {
                                    "$ref": "#/components/schemas/Exceptions.PlatformErrorCodes"
                                },
                                "ThrottleSeconds": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "ErrorStatus": {
                                    "type": "string"
                                },
                                "Message": {
                                    "type": "string"
                                },
                                "MessageData": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "x-dictionary-key": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "Destiny.GetActivityBlob": {
                "description": "Look at the Response property for more information about the nature of this response",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Response": {
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "ErrorCode": {
                                    "$ref": "#/components/schemas/Exceptions.PlatformErrorCodes"
                                },
                                "ThrottleSeconds": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "ErrorStatus": {
                                    "type": "string"
                                },
                                "Message": {
                                    "type": "string"
                                },
                                "MessageData": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "x-dictionary-key": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "Destiny.GetDestinyAggregateActivityStats": {
                "description": "Look at the Response property for more information about the nature of this response",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Response": {
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "ErrorCode": {
                                    "$ref": "#/components/schemas/Exceptions.PlatformErrorCodes"
                                },
                                "ThrottleSeconds": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "ErrorStatus": {
                                    "type": "string"
                                },
                                "Message": {
                                    "type": "string"
                                },
                                "MessageData": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "x-dictionary-key": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "Destiny.GetMembershipIdByDisplayName": {
                "description": "Look at the Response property for more information about the nature of this response",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Response": {
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "ErrorCode": {
                                    "$ref": "#/components/schemas/Exceptions.PlatformErrorCodes"
                                },
                                "ThrottleSeconds": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "ErrorStatus": {
                                    "type": "string"
                                },
                                "Message": {
                                    "type": "string"
                                },
                                "MessageData": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "x-dictionary-key": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "Destiny.GetExcellenceBadges": {
                "description": "Look at the Response property for more information about the nature of this response",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Response": {
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "ErrorCode": {
                                    "$ref": "#/components/schemas/Exceptions.PlatformErrorCodes"
                                },
                                "ThrottleSeconds": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "ErrorStatus": {
                                    "type": "string"
                                },
                                "Message": {
                                    "type": "string"
                                },
                                "MessageData": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "x-dictionary-key": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "Destiny.GetMyGrimoire": {
                "description": "Look at the Response property for more information about the nature of this response",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Response": {
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "ErrorCode": {
                                    "$ref": "#/components/schemas/Exceptions.PlatformErrorCodes"
                                },
                                "ThrottleSeconds": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "ErrorStatus": {
                                    "type": "string"
                                },
                                "Message": {
                                    "type": "string"
                                },
                                "MessageData": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "x-dictionary-key": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "Destiny.GetGrimoireByMembership": {
                "description": "Look at the Response property for more information about the nature of this response",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Response": {
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "ErrorCode": {
                                    "$ref": "#/components/schemas/Exceptions.PlatformErrorCodes"
                                },
                                "ThrottleSeconds": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "ErrorStatus": {
                                    "type": "string"
                                },
                                "Message": {
                                    "type": "string"
                                },
                                "MessageData": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "x-dictionary-key": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "Destiny.GetGrimoireDefinition": {
                "description": "Look at the Response property for more information about the nature of this response",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Response": {
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "ErrorCode": {
                                    "$ref": "#/components/schemas/Exceptions.PlatformErrorCodes"
                                },
                                "ThrottleSeconds": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "ErrorStatus": {
                                    "type": "string"
                                },
                                "Message": {
                                    "type": "string"
                                },
                                "MessageData": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "x-dictionary-key": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "Destiny.GetDestinyExplorerItems": {
                "description": "Look at the Response property for more information about the nature of this response",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Response": {
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "ErrorCode": {
                                    "$ref": "#/components/schemas/Exceptions.PlatformErrorCodes"
                                },
                                "ThrottleSeconds": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "ErrorStatus": {
                                    "type": "string"
                                },
                                "Message": {
                                    "type": "string"
                                },
                                "MessageData": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "x-dictionary-key": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "Destiny.GetDestinyExplorerTalentNodeSteps": {
                "description": "Look at the Response property for more information about the nature of this response",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Response": {
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "ErrorCode": {
                                    "$ref": "#/components/schemas/Exceptions.PlatformErrorCodes"
                                },
                                "ThrottleSeconds": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "ErrorStatus": {
                                    "type": "string"
                                },
                                "Message": {
                                    "type": "string"
                                },
                                "MessageData": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "x-dictionary-key": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "headers": {
            "X-API-Key": {
                "description": "When you have registered an Application at https://www.bungie.net/en/Application, you will receive an API key.  You should pass it in via this header with every request.",
                "required": true,
                "allowEmptyValue": false,
                "schema": {
                    "type": "string"
                }
            }
        },
        "securitySchemes": {
            "apiKey": {
                "type": "apiKey",
                "description": "Every request requires an API key.  To get an API key, register a new application at https://www.bungie.net/en/Application.",
                "name": "X-API-Key",
                "in": "header"
            },
            "oauth2": {
                "type": "oauth2",
                "description": "For requests that require Authentication, you will need to have your users authenticate via our OAuth mechanisms.  See https://github.com/Bungie-net/api/wiki/OAuth-Documentation for more details.",
                "flows": {
                    "authorizationCode": {
                        "authorizationUrl": "https://www.bungie.net/en/OAuth/Authorize",
                        "tokenUrl": "https://www.bungie.net/Platform/App/OAuth/token/",
                        "refreshUrl": "https://www.bungie.net/Platform/App/OAuth/token/",
                        "scopes": {
                            "ReadBasicUserProfile": "Read basic user profile information such as the user's handle, avatar icon, etc.",
                            "ReadGroups": "Read Group/Clan Forums, Wall, and Members for groups and clans that the \r\nuser has joined.",
                            "WriteGroups": "Write Group/Clan Forums, Wall, and Members for groups and clans that the \r\nuser has joined.",
                            "AdminGroups": "Administer Group/Clan Forums, Wall, and Members for groups and clans that the \r\nuser is a founder or an administrator.",
                            "BnetWrite": "Create new groups, clans, and forum posts.",
                            "MoveEquipDestinyItems": "Move or equip Destiny items",
                            "ReadDestinyInventoryAndVault": "Read Destiny 1 Inventory and Vault contents.\r\nFor Destiny 2, this scope is needed to read anything regarded as private. This is the only scope a\r\nDestiny 2 app needs for read operations against Destiny 2 data such as inventory, vault, currency,\r\nvendors, milestones, progression, etc.",
                            "ReadUserData": "Read user data such as who they are web notifications, \r\nclan/group memberships, recent activity, muted users.",
                            "EditUserData": "Edit user data such as preferred language, status, motto, avatar selection and theme.",
                            "ReadDestinyVendorsAndAdvisors": "Access vendor and advisor data specific to a user. OBSOLETE. This scope is only used on the Destiny 1 API.",
                            "ReadAndApplyTokens": "Read offer history and claim and apply tokens for the user.",
                            "AdvancedWriteActions": "Can perform actions that will result in a prompt to the user via the Destiny app."
                        }
                    }
                }
            }
        }
    },
    "tags": [
        {
            "name": "Destiny",
            "description": "destiny"
        }
    ]
}